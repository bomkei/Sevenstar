00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T _Unwind_RaiseException
07000a00 00000024 T ___Unwind_RaiseException
07000a24 00000024 T _Unwind_Resume
07000a24 00000024 T ___Unwind_Resume
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a90 00000024 T _Unwind_Backtrace
07000a90 00000024 T ___Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000028 W operator new(unsigned int, void*)
070012e0 00000054 W CTRPluginFramework::Controller::GetKeysDown(bool)
07001334 00000024 W CTRPluginFramework::Controller::GetKeysPressed()
07001358 00000040 W CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
07001398 00000044 W CTRPluginFramework::Controller::IsKeysDown(unsigned long)
070013dc 00000060 W CTRPluginFramework::Controller::IsKeysPressed(unsigned long)
0700143c 00000048 W CTRPluginFramework::Mutex::~Mutex()
0700143c 00000048 W CTRPluginFramework::Mutex::~Mutex()
07001484 00000044 W CTRPluginFramework::File::~File()
07001484 00000044 W CTRPluginFramework::File::~File()
070014c8 00000054 T CTRPluginFramework::is_in_range(unsigned long, unsigned long, unsigned long)
0700151c 00000114 T CTRPluginFramework::IsInRace()
07001630 000001a0 T CTRPluginFramework::GetRacePointer()
070017d0 0000008c T CTRPluginFramework::GetFNsPointer()
0700185c 000000e8 T CTRPluginFramework::GetOldPointer5CC()
07001944 000000e4 T CTRPluginFramework::GetOldPointer5D0()
07001a28 00000148 T CTRPluginFramework::GetItemPointer()
07001b70 00000198 T CTRPluginFramework::GetTotalPlayers()
07001d08 000000a8 T CTRPluginFramework::GetTime()
07001db0 00000058 T CTRPluginFramework::GetMinutes()
07001e08 00000044 T CTRPluginFramework::GetSeconds()
07001e4c 000000c0 T CTRPluginFramework::SubToTime(unsigned short)
07001f0c 0000009c T CTRPluginFramework::writeItem(unsigned long)
07001fa8 000001bc T CTRPluginFramework::writeSpeed(unsigned long)
07002164 0000008c T CTRPluginFramework::writeVR(unsigned long)
070021f0 00000090 T CTRPluginFramework::writeLocation(unsigned long)
07002280 000000c0 T CTRPluginFramework::writeFlag(unsigned short)
07002340 0000004c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
0700238c 0000004c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
070023d8 00000048 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07002420 0000004c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
0700246c 00000048 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
070024b4 00000048 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
070024fc 00000078 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
07002574 0000005c T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
070025d0 0000005c T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
0700262c 000000bc T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
070026e8 00000070 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07002758 00000138 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07002890 0000005c T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
070028ec 000000a0 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
0700298c 000000e4 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07002a70 00000168 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07002bd8 00000384 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
07002f5c 000003f8 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07003354 00000170 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
070034c4 00000408 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
070038cc 000002dc T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
07003ba8 00000058 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07003c00 00000058 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
07003c58 00000058 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07003cb0 00000058 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07003d08 0000008c T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07003d94 000000b8 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
07003e4c 000000ac T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07003ef8 00000088 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07003f80 00000234 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
070041b4 000000fc T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
070042b0 00000064 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07004314 00000304 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07004618 00000018 t __tcf_0
07004630 00000028 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()
07004630 00000028 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()
07004658 0000002c W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()
07004658 0000002c W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()
07004684 0000002c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()
07004684 0000002c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()
070046b0 00000018 t __tcf_1
070046c8 000002ac T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07004974 000000f4 T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07004a68 000000f8 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07004b60 00000084 T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07004be4 0000013c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07004d20 0000013c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07004e5c 000001ac T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
07005008 000000f8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::operator()(CTRPluginFramework::Screen const&) const
07005100 0000002c t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
0700512c 00000028 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::operator bool (*)(CTRPluginFramework::Screen const&)() const
07005154 000006c0 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
07005814 0000036c T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07005b80 0000036c T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07005eec 0000002c t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii::~Mii()
07005eec 0000002c t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii::~Mii()
07005f18 000007d4 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
070066ec 00000018 t __tcf_2
07006704 00000018 t __tcf_3
0700671c 000000d8 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::operator()(CTRPluginFramework::Screen const&) const
070067f4 0000002c t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07006820 00000028 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::operator bool (*)(CTRPluginFramework::Screen const&)() const
07006848 0000039c T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
07006be4 000000b8 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07006c9c 000001d0 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07006e6c 000000d8 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07006f44 000000b4 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07006ff8 00000038 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07007030 0000012c T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
0700715c 00000068 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
070071c4 000000b0 T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
07007274 000001f8 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
0700746c 000000b4 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07007520 00003784 T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
0700aca4 000000fc T CTRPluginFramework::main()
0700ada0 00000020 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0700adc0 00000048 W unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)
0700ae08 00000048 W unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
0700ae50 00000028 t std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::allocator()
0700ae50 00000028 t std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::allocator()
0700ae78 00000028 t std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::~allocator()
0700ae78 00000028 t std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::~allocator()
0700aea0 0000006c t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::vector(std::initializer_list<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700aea0 0000006c t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::vector(std::initializer_list<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700af0c 0000005c t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
0700af0c 0000005c t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
0700af68 00000034 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()
0700af68 00000034 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()
0700af9c 00000028 W std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()
0700af9c 00000028 W std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()
0700afc4 00000088 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()
0700afc4 00000088 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()
0700b04c 0000005c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700b04c 0000005c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700b0a8 00000054 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::empty() const
0700b0fc 00000034 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::begin() const
0700b130 00000038 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::end() const
0700b168 00000050 t bool __gnu_cxx::operator!=<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > > const&, __gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > > const&)
0700b1b8 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > >::operator++()
0700b1f0 00000028 t __gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > >::operator*() const
0700b218 00000038 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700b250 00000038 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::operator[](unsigned int) const
0700b288 00000028 W std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()
0700b288 00000028 W std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()
0700b2b0 00000058 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(unsigned int, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700b2b0 00000058 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(unsigned int, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700b308 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned int)
0700b34c 00000028 t std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::allocator()
0700b34c 00000028 t std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::allocator()
0700b374 00000028 t std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::~allocator()
0700b374 00000028 t std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::~allocator()
0700b39c 0000006c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::vector(std::initializer_list<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700b39c 0000006c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::vector(std::initializer_list<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700b408 0000005c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
0700b408 0000005c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
0700b464 00000034 t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::begin()
0700b498 00000038 t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::end()
0700b4d0 00000050 t bool __gnu_cxx::operator!=<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > > const&, __gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > > const&)
0700b520 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > >::operator++()
0700b558 00000028 t __gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > >::operator*() const
0700b580 00000084 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b604 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700b644 00000044 t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::operator[](unsigned int)
0700b688 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700b6d8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*)
0700b724 00000028 t std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::allocator()
0700b724 00000028 t std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::allocator()
0700b74c 00000028 t std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::~allocator()
0700b74c 00000028 t std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::~allocator()
0700b774 0000006c t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::vector(std::initializer_list<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700b774 0000006c t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::vector(std::initializer_list<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700b7e0 0000005c t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
0700b7e0 0000005c t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
0700b83c 00000034 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::begin() const
0700b870 00000038 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::end() const
0700b8a8 00000050 t bool __gnu_cxx::operator!=<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > > const&, __gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > > const&)
0700b8f8 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > >::operator++()
0700b930 00000028 t __gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > >::operator*() const
0700b958 00000028 W std::allocator<CTRPluginFramework::MenuEntry*>::allocator()
0700b958 00000028 W std::allocator<CTRPluginFramework::MenuEntry*>::allocator()
0700b980 00000028 W std::allocator<CTRPluginFramework::MenuEntry*>::~allocator()
0700b980 00000028 W std::allocator<CTRPluginFramework::MenuEntry*>::~allocator()
0700b9a8 0000006c W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700b9a8 0000006c W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700ba14 0000005c W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::~vector()
0700ba14 0000005c W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::~vector()
0700ba70 00000024 t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::__new_allocator()
0700ba94 00000024 t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::~__new_allocator()
0700bab8 00000028 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_Vector_impl::~_Vector_impl()
0700bab8 00000028 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_Vector_impl::~_Vector_impl()
0700bae0 00000034 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_Vector_base(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700bb14 00000058 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~_Vector_base()
0700bb6c 00000028 t std::initializer_list<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::begin() const
0700bb94 0000003c t std::initializer_list<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::end() const
0700bbd0 000000c8 t void std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_M_range_initialize<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::forward_iterator_tag)
0700bc98 00000024 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_M_get_Tp_allocator()
0700bcbc 00000030 t void std::_Destroy<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>&)
0700bcec 00000048 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl_data::_Vector_impl_data()
0700bcec 00000048 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl_data::_Vector_impl_data()
0700bd34 00000024 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~__new_allocator()
0700bd34 00000024 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~__new_allocator()
0700bd58 00000044 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
0700bd9c 00000024 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()
0700bdc0 00000030 W void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700bdf0 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin() const
0700be24 00000038 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end() const
0700be5c 00000050 W bool __gnu_cxx::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
0700beac 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > >::__normal_iterator(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const* const&)
0700beac 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > >::__normal_iterator(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const* const&)
0700bee4 00000024 t __gnu_cxx::__normal_iterator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> > >::base() const
0700bf08 00000024 W std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700bf2c 000000a0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700bfcc 00000024 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__new_allocator()
0700bfcc 00000024 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__new_allocator()
0700bff0 00000078 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_S_check_init_len(unsigned int, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700c068 00000044 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base(unsigned int, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700c068 00000044 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base(unsigned int, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700c0ac 00000054 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_default_initialize(unsigned int)
0700c100 00000024 t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::__new_allocator()
0700c124 00000024 t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::~__new_allocator()
0700c148 00000028 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_Vector_impl::~_Vector_impl()
0700c148 00000028 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_Vector_impl::~_Vector_impl()
0700c170 00000034 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_Vector_base(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700c1a4 0000008c t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~_Vector_base()
0700c230 00000028 t std::initializer_list<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::begin() const
0700c258 00000048 t std::initializer_list<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::end() const
0700c2a0 000000d4 t void std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_M_range_initialize<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, std::forward_iterator_tag)
0700c374 00000024 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_M_get_Tp_allocator()
0700c398 00000030 t void std::_Destroy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>&)
0700c3c8 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > >::__normal_iterator(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* const&)
0700c3c8 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > >::__normal_iterator(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* const&)
0700c400 00000024 t __gnu_cxx::__normal_iterator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> > >::base() const
0700c424 00000040 W void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c464 00000038 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::end()
0700c49c 00000024 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_S_use_relocate()
0700c4c0 00000024 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_S_nothrow_relocate(std::integral_constant<bool, true>)
0700c4e4 000002b8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c79c 00000024 t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::__new_allocator()
0700c7c0 00000024 t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::~__new_allocator()
0700c7e4 00000028 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_Vector_impl::~_Vector_impl()
0700c7e4 00000028 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_Vector_impl::~_Vector_impl()
0700c80c 00000034 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_Vector_base(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700c840 00000058 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~_Vector_base()
0700c898 00000028 t std::initializer_list<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::begin() const
0700c8c0 0000003c t std::initializer_list<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::end() const
0700c8fc 000000c8 t void std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_M_range_initialize<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::forward_iterator_tag)
0700c9c4 00000024 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_M_get_Tp_allocator()
0700c9e8 00000030 t void std::_Destroy<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>&)
0700ca18 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > >::__normal_iterator(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const* const&)
0700ca18 00000038 t __gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > >::__normal_iterator(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const* const&)
0700ca50 00000024 t __gnu_cxx::__normal_iterator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> > >::base() const
0700ca74 00000024 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::__new_allocator()
0700ca74 00000024 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::__new_allocator()
0700ca98 00000024 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::~__new_allocator()
0700ca98 00000024 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::~__new_allocator()
0700cabc 00000028 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_impl::~_Vector_impl()
0700cabc 00000028 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_impl::~_Vector_impl()
0700cae4 00000034 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_base(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700cae4 00000034 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_base(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700cb18 00000058 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::~_Vector_base()
0700cb18 00000058 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::~_Vector_base()
0700cb70 00000028 W std::initializer_list<CTRPluginFramework::MenuEntry*>::begin() const
0700cb98 0000003c W std::initializer_list<CTRPluginFramework::MenuEntry*>::end() const
0700cbd4 000000c8 W void std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_M_range_initialize<CTRPluginFramework::MenuEntry* const*>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, std::forward_iterator_tag)
0700cc9c 00000024 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_M_get_Tp_allocator()
0700ccc0 00000030 W void std::_Destroy<CTRPluginFramework::MenuEntry**, CTRPluginFramework::MenuEntry*>(CTRPluginFramework::MenuEntry**, CTRPluginFramework::MenuEntry**, std::allocator<CTRPluginFramework::MenuEntry*>&)
0700ccf0 0000003c t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700ccf0 0000003c t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700cd2c 00000044 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_M_deallocate(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, unsigned int)
0700cd70 00000028 t std::initializer_list<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::size() const
0700cd98 00000044 t std::iterator_traits<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>::difference_type std::distance<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*)
0700cddc 00000078 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_S_check_init_len(unsigned int, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700ce54 00000048 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_M_allocate(unsigned int)
0700ce9c 0000003c t CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item* std::__uninitialized_copy_a<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>&)
0700ced8 0000002c t void std::_Destroy<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*)
0700cf04 00000034 W std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
0700cf38 0000002c W void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700cf64 00000038 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__normal_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const&)
0700cf64 00000038 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__normal_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const&)
0700cf9c 00000024 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::base() const
0700cfc0 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&& std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::type&)
0700cfe4 00000040 W void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700d024 000002b8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700d2dc 00000054 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_S_max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700d330 00000030 W std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700d330 00000030 W std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700d360 0000003c W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700d360 0000003c W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700d39c 00000070 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_create_storage(unsigned int)
0700d40c 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_default_n_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700d440 0000003c t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700d440 0000003c t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700d47c 00000044 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_M_deallocate(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, unsigned int)
0700d4c0 00000028 t std::initializer_list<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::size() const
0700d4e8 00000044 t std::iterator_traits<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>::difference_type std::distance<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*)
0700d52c 00000078 t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_S_check_init_len(unsigned int, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700d5a4 00000048 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_M_allocate(unsigned int)
0700d5ec 0000003c t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* std::__uninitialized_copy_a<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>&)
0700d628 0000002c t void std::_Destroy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*)
0700d654 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const& std::forward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>::type&)
0700d678 00000050 W void std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700d6c8 00000038 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__normal_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* const&)
0700d6c8 00000038 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__normal_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* const&)
0700d700 000000e8 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
0700d7e8 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::begin()
0700d81c 00000074 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::difference_type __gnu_cxx::operator-<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)
0700d890 00000048 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int)
0700d8d8 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_S_relocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700d91c 00000024 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::base() const
0700d940 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700d994 0000002c W void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700d9c0 0000003c t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700d9c0 0000003c t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700d9fc 00000044 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_M_deallocate(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, unsigned int)
0700da40 00000028 t std::initializer_list<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::size() const
0700da68 00000044 t std::iterator_traits<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>::difference_type std::distance<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*)
0700daac 00000078 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_S_check_init_len(unsigned int, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700db24 00000048 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_M_allocate(unsigned int)
0700db6c 0000003c t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__uninitialized_copy_a<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>&)
0700dba8 0000002c t void std::_Destroy<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700dbd4 0000003c W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700dbd4 0000003c W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_impl::_Vector_impl(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700dc10 00000044 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_M_deallocate(CTRPluginFramework::MenuEntry**, unsigned int)
0700dc54 00000028 W std::initializer_list<CTRPluginFramework::MenuEntry*>::size() const
0700dc7c 00000044 W std::iterator_traits<CTRPluginFramework::MenuEntry* const*>::difference_type std::distance<CTRPluginFramework::MenuEntry* const*>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*)
0700dcc0 00000078 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_S_check_init_len(unsigned int, std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700dd38 00000048 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_M_allocate(unsigned int)
0700dd80 0000003c W CTRPluginFramework::MenuEntry** std::__uninitialized_copy_a<CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**, CTRPluginFramework::MenuEntry*>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**, std::allocator<CTRPluginFramework::MenuEntry*>&)
0700ddbc 0000002c W void std::_Destroy<CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry**, CTRPluginFramework::MenuEntry**)
0700dde8 00000030 t std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::allocator(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700dde8 00000030 t std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::allocator(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700de18 00000048 t std::_Vector_base<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_Vector_impl_data::_Vector_impl_data()
0700de60 00000034 t std::allocator_traits<std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::deallocate(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>&, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, unsigned int)
0700de94 00000024 t std::iterator_traits<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>::iterator_category std::__iterator_category<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const* const&)
0700deb8 00000038 t std::iterator_traits<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>::difference_type std::__distance<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, std::random_access_iterator_tag)
0700def0 00000050 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::_S_max_size(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700df40 00000034 t std::allocator_traits<std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::allocate(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>&, unsigned int)
0700df74 00000048 t CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item* std::uninitialized_copy<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*)
0700dfbc 00000024 t void std::_Destroy_aux<true>::__destroy<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*)
0700dfe0 0000002c W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
0700e00c 00000058 W void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700e064 00000050 W void std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700e0b4 00000028 W std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700e0dc 00000028 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__new_allocator(std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700e0dc 00000028 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__new_allocator(std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700e104 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_default_n<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
0700e13c 00000030 t std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::allocator(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700e13c 00000030 t std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::allocator(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700e16c 00000048 t std::_Vector_base<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_Vector_impl_data::_Vector_impl_data()
0700e1b4 00000034 t std::allocator_traits<std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::deallocate(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>&, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, unsigned int)
0700e1e8 00000024 t std::iterator_traits<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>::iterator_category std::__iterator_category<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const* const&)
0700e20c 00000068 t std::iterator_traits<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>::difference_type std::__distance<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, std::random_access_iterator_tag)
0700e274 00000054 t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::_S_max_size(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700e2c8 00000034 t std::allocator_traits<std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::allocate(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>&, unsigned int)
0700e2fc 00000048 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* std::uninitialized_copy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*)
0700e344 00000058 t void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*)
0700e39c 00000038 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const
0700e3d4 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const
0700e438 00000034 W std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned int)
0700e46c 00000040 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_S_do_relocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::integral_constant<bool, true>)
0700e4ac 00000030 W std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700e4dc 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700e518 00000028 W void std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700e540 00000030 t std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::allocator(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700e540 00000030 t std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::allocator(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700e570 00000048 t std::_Vector_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_Vector_impl_data::_Vector_impl_data()
0700e5b8 00000034 t std::allocator_traits<std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::deallocate(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>&, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, unsigned int)
0700e5ec 00000024 t std::iterator_traits<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>::iterator_category std::__iterator_category<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const* const&)
0700e610 00000038 t std::iterator_traits<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>::difference_type std::__distance<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, std::random_access_iterator_tag)
0700e648 00000050 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::_S_max_size(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700e698 00000034 t std::allocator_traits<std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::allocate(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>&, unsigned int)
0700e6cc 00000048 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::uninitialized_copy<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700e714 00000024 t void std::_Destroy_aux<true>::__destroy<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700e738 00000030 W std::allocator<CTRPluginFramework::MenuEntry*>::allocator(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700e738 00000030 W std::allocator<CTRPluginFramework::MenuEntry*>::allocator(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700e768 00000048 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_impl_data::_Vector_impl_data()
0700e768 00000048 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_Vector_impl_data::_Vector_impl_data()
0700e7b0 00000034 W std::allocator_traits<std::allocator<CTRPluginFramework::MenuEntry*> >::deallocate(std::allocator<CTRPluginFramework::MenuEntry*>&, CTRPluginFramework::MenuEntry**, unsigned int)
0700e7e4 00000024 W std::iterator_traits<CTRPluginFramework::MenuEntry* const*>::iterator_category std::__iterator_category<CTRPluginFramework::MenuEntry* const*>(CTRPluginFramework::MenuEntry* const* const&)
0700e808 00000038 W std::iterator_traits<CTRPluginFramework::MenuEntry* const*>::difference_type std::__distance<CTRPluginFramework::MenuEntry* const*>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, std::random_access_iterator_tag)
0700e840 00000050 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::_S_max_size(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700e890 00000034 W std::allocator_traits<std::allocator<CTRPluginFramework::MenuEntry*> >::allocate(std::allocator<CTRPluginFramework::MenuEntry*>&, unsigned int)
0700e8c4 00000048 W CTRPluginFramework::MenuEntry** std::uninitialized_copy<CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700e90c 00000024 W void std::_Destroy_aux<true>::__destroy<CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry**, CTRPluginFramework::MenuEntry**)
0700e930 00000028 t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::__new_allocator(std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700e958 0000002c t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::deallocate(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, unsigned int)
0700e984 00000028 t std::allocator_traits<std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::max_size(std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> const&)
0700e9ac 00000084 t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::allocate(unsigned int, void const*)
0700ea30 00000038 t CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*)
0700ea68 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700ea8c 00000024 W void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700eab0 00000028 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const
0700ead8 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_default_n_1<false>::__uninit_default_n<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
0700eb40 00000028 t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::__new_allocator(std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700eb68 0000002c t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::deallocate(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, unsigned int)
0700eb94 00000028 t std::allocator_traits<std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::max_size(std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> const&)
0700ebbc 00000098 t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::allocate(unsigned int, void const*)
0700ec54 00000038 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*)
0700ec8c 00000024 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* std::__addressof<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii&)
0700ecb0 00000024 t void std::_Destroy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*)
0700ecd4 00000024 W std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const
0700ecf8 00000098 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned int, void const*)
0700ed90 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700edf0 00000040 W std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700edf0 00000040 W std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700ee30 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700ee78 00000028 t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::__new_allocator(std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700eea0 0000002c t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::deallocate(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*, unsigned int)
0700eecc 00000028 t std::allocator_traits<std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::max_size(std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> const&)
0700eef4 00000084 t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::allocate(unsigned int, void const*)
0700ef78 00000038 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__uninitialized_copy<true>::__uninit_copy<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700efb0 00000028 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::__new_allocator(std::__new_allocator<CTRPluginFramework::MenuEntry*> const&)
0700efb0 00000028 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::__new_allocator(std::__new_allocator<CTRPluginFramework::MenuEntry*> const&)
0700efd8 0000002c W std::__new_allocator<CTRPluginFramework::MenuEntry*>::deallocate(CTRPluginFramework::MenuEntry**, unsigned int)
0700f004 00000028 W std::allocator_traits<std::allocator<CTRPluginFramework::MenuEntry*> >::max_size(std::allocator<CTRPluginFramework::MenuEntry*> const&)
0700f02c 00000084 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::allocate(unsigned int, void const*)
0700f0b0 00000038 W CTRPluginFramework::MenuEntry** std::__uninitialized_copy<true>::__uninit_copy<CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700f0e8 00000028 t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::max_size() const
0700f110 00000024 t std::__new_allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>::_M_max_size() const
0700f134 00000074 t CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item* std::__do_uninit_copy<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*)
0700f1a8 00000028 W std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_M_max_size() const
0700f1d0 00000038 W void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700f208 00000028 t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::max_size() const
0700f230 00000028 t std::__new_allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii>::_M_max_size() const
0700f258 00000074 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii* std::__do_uninit_copy<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*)
0700f2cc 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700f2f0 00000088 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700f378 00000024 W std::remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&>::type&& std::move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&)
0700f39c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700f3d4 00000028 t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::max_size() const
0700f3fc 00000024 t std::__new_allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>::_M_max_size() const
0700f420 00000050 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::copy<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700f470 00000028 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::max_size() const
0700f498 00000024 W std::__new_allocator<CTRPluginFramework::MenuEntry*>::_M_max_size() const
0700f4bc 00000050 W CTRPluginFramework::MenuEntry** std::copy<CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700f50c 00000024 t CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item* std::__addressof<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item&)
0700f530 0000004c t void std::_Construct<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const&>(CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item*, CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const&)
0700f57c 00000048 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii::Mii(Mii const&)
0700f57c 00000048 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii::Mii(Mii const&)
0700f5c4 0000004c t void std::_Construct<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const&>(CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii*, CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const&)
0700f610 00000058 W void std::__relocate_object_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
0700f668 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__do_uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700f6fc 00000024 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const* std::__miter_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*)
0700f720 00000074 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__copy_move_a<false, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700f794 00000024 W CTRPluginFramework::MenuEntry* const* std::__miter_base<CTRPluginFramework::MenuEntry* const*>(CTRPluginFramework::MenuEntry* const*)
0700f7b8 00000074 W CTRPluginFramework::MenuEntry** std::__copy_move_a<false, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700f82c 00000024 t CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const& std::forward<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const&>(std::remove_reference<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item const&>::type&)
0700f850 00000024 t CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const& std::forward<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const&>(std::remove_reference<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii const&>::type&)
0700f874 00000038 W bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)
0700f8ac 00000038 W std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()
0700f8e4 00000028 W std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const
0700f90c 0000004c W void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700f958 00000024 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const* std::__niter_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*)
0700f97c 00000024 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__niter_base<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700f9a0 00000038 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__copy_move_a1<false, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700f9d8 00000028 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__niter_wrap<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* const&, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700fa00 00000024 W CTRPluginFramework::MenuEntry* const* std::__niter_base<CTRPluginFramework::MenuEntry* const*>(CTRPluginFramework::MenuEntry* const*)
0700fa24 00000024 W CTRPluginFramework::MenuEntry** std::__niter_base<CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry**)
0700fa48 00000038 W CTRPluginFramework::MenuEntry** std::__copy_move_a1<false, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700fa80 00000028 W CTRPluginFramework::MenuEntry** std::__niter_wrap<CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry** const&, CTRPluginFramework::MenuEntry**)
0700faa8 00000048 W bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)
0700faf0 00000038 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__copy_move_a2<false, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700fb28 00000038 W CTRPluginFramework::MenuEntry** std::__copy_move_a2<false, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700fb60 00000028 W std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const
0700fb88 0000006c t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer>(CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer const*, CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer*)
0700fbf4 0000006c W CTRPluginFramework::MenuEntry** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::MenuEntry*>(CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry* const*, CTRPluginFramework::MenuEntry**)
0700fc60 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700fc94 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700fd00 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0700fd84 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700fde0 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700fe3c 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700fe98 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700fedc 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700ff5c 000000c0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701001c 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701015c 0000009c T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
070101f8 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07010230 0000001c T CTRPluginFramework::InitializeRandomEngine()
0701024c 0000025c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070104a8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070104a8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070104ec 0000075c t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07010c48 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010c50 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07010c94 00000124 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07010db8 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07010e80 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07010ed4 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07010f54 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07010f70 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07010fdc 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07011060 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070110c0 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
070110dc 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07011100 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011124 000000a0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070111c4 00000080 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .constprop.0]
07011244 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070112ec 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070112f8 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07011364 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070113c4 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07011408 00000048 T CTRPluginFramework::Directory::Close() const
07011450 00000108 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07011558 00000090 T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07011558 00000090 T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070115e8 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
070115fc 00000008 T CTRPluginFramework::Directory::IsOpen() const
07011604 00000040 T CTRPluginFramework::Directory::Directory()
07011604 00000040 T CTRPluginFramework::Directory::Directory()
07011644 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07011678 00000074 T CTRPluginFramework::Directory::~Directory()
07011678 00000074 T CTRPluginFramework::Directory::~Directory()
070116ec 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070116ec 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0701170c 00000094 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070117a0 000000a0 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011840 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070118e0 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070119b4 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011a48 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07011b94 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07011b94 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07011bec 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07011bec 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07011c08 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07011d24 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07011da8 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07011e10 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07011ec4 00000110 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07011fd4 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07012018 000001e8 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07012200 000001a4 T CTRPluginFramework::Directory::_List() const
070123a4 000000d8 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0701247c 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07012558 00000010 T CTRPluginFramework::Process::GetHandle()
07012568 00000010 T CTRPluginFramework::Process::GetTitleID()
07012578 00000064 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070125dc 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012614 00000024 T CTRPluginFramework::Process::GetTextSize()
07012638 00000008 T CTRPluginFramework::Process::Pause()
07012640 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07012650 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
070126f8 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
070126fc 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07012748 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07012764 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
07012780 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0701279c 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
070127c0 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070127e0 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07012800 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07012820 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
07012840 00000178 T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
070129b8 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
070129dc 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07012a48 00000080 T CTRPluginFramework::File::Close() const
07012ac8 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07012b84 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07012c78 00000058 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07012cd0 000000d4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07012da4 00000008 T CTRPluginFramework::File::Tell() const
07012dac 0000002c T CTRPluginFramework::File::Rewind() const
07012dd8 00000030 T CTRPluginFramework::File::Flush() const
07012e08 00000064 T CTRPluginFramework::File::GetSize() const
07012e6c 000000e0 T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
07012f4c 00000008 T CTRPluginFramework::File::IsOpen() const
07012f54 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07012f68 00000044 T CTRPluginFramework::File::File()
07012f68 00000044 T CTRPluginFramework::File::File()
07012fac 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013040 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013114 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013198 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013238 00000114 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0701334c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0701334c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070133a8 00000018 T CTRPluginFramework::Clock::Clock()
070133a8 00000018 T CTRPluginFramework::Clock::Clock()
070133c0 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
070133ec 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07013424 00000034 T CTRPluginFramework::Clock::Restart()
07013458 0000003c T CTRPluginFramework::Controller::Update()
07013494 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07013494 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07013504 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07013518 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuFolder const*) const
0701351c 00000040 T CTRPluginFramework::PluginMenu::Run() const
0701355c 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07013564 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07013574 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07013580 0000002c W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07013580 0000002c W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
070135ac 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
070135ac 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
070135c4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070135c4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070135ec 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
070135fc 00000098 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
070135fc 00000098 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
07013694 00000064 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
07013694 00000064 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
070136f8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070136f8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013744 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013744 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013794 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07013794 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070137c4 00000010 T CTRPluginFramework::MenuEntry::Disable() const
070137d4 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
070137dc 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
070137e4 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070137ec 00000030 W CTRPluginFramework::TextBox::~TextBox()
070137ec 00000030 W CTRPluginFramework::TextBox::~TextBox()
0701381c 0000001c W CTRPluginFramework::TextBox::~TextBox()
07013838 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013838 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013880 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013880 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070138bc 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
070138bc 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
070138f8 00000008 T CTRPluginFramework::MessageBox::operator()() const
07013900 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070139a8 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013a68 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07013b10 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013ba0 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013c30 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013cc0 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013cc0 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013d08 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07013d08 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07013d74 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07013d74 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07013da0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07013da8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07013dc4 00000044 T CTRPluginFramework::Keyboard::Open() const
07013e08 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07013ecc 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07013fd0 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07014094 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07014198 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0701425c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07014360 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
070143f8 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
070144c8 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0701453c 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070145c4 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
070145cc 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
070145d4 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
070145dc 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07014648 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070146cc 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701472c 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07014734 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
070147b4 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07014830 000000f4 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07014924 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07014924 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07014940 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07014940 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07014980 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070149b0 000000c4 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07014a74 0000001c T CTRPluginFramework::HotkeyManager::Count()
07014a90 00000130 T CTRPluginFramework::HotkeyManager::AskForKeys()
07014bc0 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07014d08 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07014d3c 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07014d88 00000138 W __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > std::find<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (*)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07014ec0 00000104 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07014fc4 0000002c W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::push_back(bool (* const&)(CTRPluginFramework::Screen const&))
07014ff0 00000090 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07015080 00000104 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07015184 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701520c 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
0701527c 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070152e0 00000060 W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&)
07015340 000000f4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07015434 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0701546c 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
070154e8 00000110 T CTRPluginFramework::Color::Fade(float)
070155f8 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07015638 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070156b4 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
070158d4 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0701599c 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
070159a4 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07015a00 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
07015a50 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07015a84 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07015b08 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07015b44 00000028 T OnLoadCro
07015b6c 00000004 W CTRPluginFramework::OnProcessExit()
07015b70 00000004 W CTRPluginFramework::OnPluginToSwap()
07015b74 00000004 W CTRPluginFramework::OnPluginFromSwap()
07015b78 000001d8 T CTRPluginFramework::Initialize()
07015d50 000000ac T CTRPluginFramework::ThreadExit()
07015dfc 00000054 T abort
07015e50 00000044 T CTRPluginFramework::ThreadInit(void*)
07015e94 0000009c T __entrypoint
07015f30 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07016018 0000064c T CTRPluginFramework::KeepThreadMain(void*)
07016664 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
070166ac 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
070166d8 000000b8 t NCSNDCmd_Add
07016790 00000084 t NCSNDCmd_Execute.constprop.0
07016814 0000005c T ncsndNotifyAptEvent
07016870 00000004 t ncsndAptHook
07016874 000001cc T ncsndInit
07016a40 000000ac T ncsndExit
07016aec 00000024 T ncsndInitializeSound
07016b10 00000260 T ncsndPlaySound
07016d70 00000040 T ncsndStopSound
07016db0 00000090 T ncsndIsPlaying
07016e40 T __aeabi_read_tp
07016e4c T LoadCROHooked
07016e60 T AR__ExecuteRoutine
07016e88 t stackBak
07016e90 T svcCustomBackdoor
07016e98 T svcConvertVAToPA
07016ea0 T svcFlushDataCacheRange
07016ea8 T svcInvalidateEntireInstructionCache
07016eb0 T svcMapProcessMemoryEx
07016ec4 T svcUnmapProcessMemoryEx
07016ecc T svcControlProcess
07016ed4 00000020 T __libctru_exit
07016ef4 0000001c T __appExit
07016f10 0000003c T __syscall_getreent
07016f4c 0000003c T __getThreadLocalStorage
07016f88 00000070 T __syscall_gettod_r
07016ff8 00000004 T __syscall_lock_acquire
07016ffc 00000004 T __syscall_lock_release
07017000 00000004 T __syscall_lock_init_recursive
07017004 00000004 T __syscall_lock_acquire_recursive
07017008 00000004 T __syscall_lock_release_recursive
0701700c 00000054 T initThreadVars
07017060 0000005c T __system_initSyscalls
070170bc 0000018c T __createThread
07017248 00000110 T __startThread
07017358 00000024 T threadGetHandle
0701737c 0000002c T threadFree
070173a8 00000024 T threadJoin
070173cc 00000020 T threadGetCurrent
070173ec 0000003c T threadExit
07017428 00000020 t _thread_begin
07017448 0000004c T hidInitFake
07017494 0000003c T hidExitFake
070174d0 0000002c T hidSetSharedMem
070174fc 00000070 T plgLdrExit
0701756c 000000d4 T plgLdrInit
07017640 00000050 T PLGLDR__GetPluginPath
07017690 00000024 T PLGLDR__FetchEvent
070176b4 000000cc T PLGLDR__Reply
07017780 000000b0 T __system_allocateHeaps
07017830 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0701785c 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07017884 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
070179d8 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
07017a58 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
07017a80 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07017adc 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07017af4 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07017bc4 00000004 T __gsp__Update
07017bc8 00000294 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07017e5c 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07017e74 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07017e94 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07017edc 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07017f10 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07017f34 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07017f58 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07017f94 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07017fc0 000000a4 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07018064 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
07018098 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
07018140 000001a8 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
070182e8 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07018324 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07018344 00000244 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07018588 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070185f4 00000250 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07018844 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070188b8 00000378 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07018c30 00000218 T CTRPluginFramework::Screenshot::UpdateFileCount()
07018e48 00000048 T CTRPluginFramework::Screenshot::Initialize()
07018e90 0000006c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07018efc 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07018f78 000000ac T CTRPluginFramework::SystemImpl::Initialize()
07019024 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
07019074 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0701908c 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
070190a8 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
070190e4 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07019104 00000044 T CTRPluginFramework::SystemImpl::Status()
07019148 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07019168 00000060 t CTRPluginFramework::AsmWrapper* std::__relocate_a_1<CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, std::allocator<CTRPluginFramework::AsmWrapper> >(CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, std::allocator<CTRPluginFramework::AsmWrapper>&) [clone .isra.0]
070191c8 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701922c 0000029c t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
070194c8 00000044 W CTRPluginFramework::Lock::~Lock()
070194c8 00000044 W CTRPluginFramework::Lock::~Lock()
0701950c 00000094 T CTRPluginFramework::HookManager::HookManager()
0701950c 00000094 T CTRPluginFramework::HookManager::HookManager()
070195a0 000000d8 T __hook__CheckTlsValue
07019678 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
070196ec 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07019750 000000cc T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0701981c 0000000c T CTRPluginFramework::HookManager::Lock()
07019828 0000000c T CTRPluginFramework::HookManager::Unlock()
07019834 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0701989c 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07019914 000000c4 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
070199d8 0000008c T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07019a64 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07019bc0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
07019bcc 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07019c08 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
07019c18 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07019c68 0000003c t std::__shared_count<(__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)0> const&) [clone .isra.0]
07019ca4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07019ca4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07019d04 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07019d5c 000000a4 T CTRPluginFramework::Scheduler::Initialize()
07019e00 0000004c T CTRPluginFramework::Scheduler::Exit()
07019e4c 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07019e4c 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07019e6c 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
07019eac 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0701a050 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0701a154 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0701a294 0000017c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0701a410 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0701a454 00000080 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0701a4d4 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0701a4f8 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0701a4f8 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0701a564 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
0701a664 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0701a6b4 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
0701a794 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
0701a7f0 00000028 T CTRPluginFramework::ScreenImpl::Release()
0701a818 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0701a888 00000040 T CTRPluginFramework::ScreenImpl::Flush()
0701a8c8 00000094 T CTRPluginFramework::ScreenImpl::Clear(bool)
0701a95c 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0701a98c 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
0701aa58 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0701aa60 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0701aac0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0701ab10 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0701ab4c 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
0701abd8 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
0701ac48 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0701ac78 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
0701acd8 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0701acec 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0701ad08 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0701ad24 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0701ad2c 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0701ad34 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0701ad3c 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0701ad58 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0701ad74 0000005c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
0701add0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0701adfc 00000054 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
0701ae50 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0701aeac 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0701aed0 00000004 t addrMapNodeDestructor(rbtree_node*)
0701aed4 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0701b018 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0701b020 0000006c T CTRPluginFramework::Heap::Free(void*)
0701b08c 0000000c T CTRPluginFramework::Heap::SpaceFree()
0701b098 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0701b0a4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0701b0c4 000001a4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701b268 00000030 W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short>(unsigned short const*, unsigned short const*, unsigned short*)
0701b298 000001a4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0701b43c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701b43c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701b500 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0701b530 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0701b564 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0701b570 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0701b588 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0701b5c8 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
0701b60c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0701b61c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0701b630 00000004 T Kernel::Initialize()
0701b634 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0701b64c 0000000c T KProcess::GetCurrent()
0701b658 00000024 T KProcess::PatchCore2Access()
0701b67c 0000002c T KProcess::PatchCategory(unsigned long)
0701b6a8 00000014 T KProcess__PatchCategory
0701b6bc 0000002c T KProcess::PatchMaxPriority(unsigned long)
0701b6e8 00000014 T KProcess__PatchMaxPriority
0701b6fc 00000028 T KProcess::PatchMaxThreads()
0701b724 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0701b770 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
0701b804 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0701b840 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0701b878 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0701b8dc 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0701b94c 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0701b9e0 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0701ba88 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0701bac0 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0701badc 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0701baf4 t _store_reg_loop
0701bb14 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
0701bb20 0000010c W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0701bc2c 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
0701bc68 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0701bd24 00000428 T CTRPluginFramework::ProcessImpl::Initialize()
0701c14c 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
0701c1b8 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
0701c298 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701c2c4 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701c320 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0701c320 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0701c3c0 0000004c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0701c40c 00000038 T CTRPluginFramework::EventManager::Clear()
0701c444 000001c4 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0701c608 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0701c670 00000304 T CTRPluginFramework::EventManager::ProcessEvents()
0701c978 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0701ca44 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0701ca4c 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0701ca54 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0701ca58 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0701ca5c 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0701caa4 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0701cac8 00000048 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0701cb10 0000011c W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0701cc2c 000001c8 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0701cdf4 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701ce18 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701ce60 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0701ce8c 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701ce8c 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701cf90 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0701cf98 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0701cfb8 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701d140 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701d160 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0701d17c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701d198 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0701d1a8 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0701d1b0 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0701d1b8 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0701d1c0 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0701d1c0 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0701d1e0 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0701d318 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0701d358 0000073c T CTRPluginFramework::PluginMenuImpl::Run()
0701da94 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0701daec 0000009c W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0701db88 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701dc8c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701dc8c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701dcf4 00000190 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0701de84 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0701dfa4 0000019c T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701e140 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0701e188 000000b4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701e23c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0701e278 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701e3ac 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701e4ec 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0701e4f8 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0701e50c 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701e50c 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701e65c 000001b8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701e65c 000001b8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701e814 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0701e898 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701e898 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701e974 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701e974 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701ea8c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701eac8 00000058 T CTRPluginFramework::Menu::CloseAll()
0701eb20 00000030 T CTRPluginFramework::Menu::~Menu()
0701eb20 00000030 T CTRPluginFramework::Menu::~Menu()
0701eb50 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701eb5c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701eb64 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701eb6c 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0701ebb0 000003a4 T CTRPluginFramework::Menu::Draw() const
0701ef58 000000a0 T CTRPluginFramework::Menu::_ScrollUp(int)
0701eff8 000000a0 T CTRPluginFramework::Menu::_ScrollDown(int)
0701f098 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701f2e0 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701f44c 00000068 T CTRPluginFramework::Menu::ShowNote()
0701f4b4 00000008 T CTRPluginFramework::Menu::CloseNote()
0701f4bc 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701f4c4 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701f504 00000044 T CTRPluginFramework::Menu::Pop()
0701f548 00000104 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701f64c 000000a8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701f6f4 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0701f6fc 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701f6fc 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701f72c 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
0701f748 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701f748 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701f81c 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701f838 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f838 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f90c 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f90c 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f9e4 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701f9f4 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701fa44 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701fa5c 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701fa80 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
0701fb28 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701fb38 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701fb58 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701fbb0 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701fbc0 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701fbd0 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701fbe0 00000030 t CTRPluginFramework::GetIndex(int)
0701fc10 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701fc7c 00000098 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701fd14 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701fe48 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0701febc 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
07020088 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07020088 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070200f4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07020120 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07020120 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07020150 00000108 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
07020258 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
07020294 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07020294 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070203f0 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07020448 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07020508 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
070205f4 00000064 t __tcf_0
07020658 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070206dc 000004b8 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070206dc 000004b8 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07020b94 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07020ba0 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07020ec8 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07021000 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07021498 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
070215b4 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07021644 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0702167c 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
070216a8 000000d4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0702177c 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07021800 000000a4 T CTRPluginFramework::PluginMenuHome::Init()
070218a4 0000009c T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07021940 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0702199c 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07021a5c 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07021ab0 00000158 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07021c08 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07021fb4 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070221d8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070221ec 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07022200 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07022214 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07022218 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0702221c 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07022244 00000064 t __tcf_0
070222a8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702232c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07022390 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07022438 00000058 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07022490 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070224fc 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07022604 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
07022784 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07022914 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07022974 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07022a34 000000fc W std::__cxx11::to_string(int)
07022b30 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07022c54 00000048 t CTRPluginFramework::Reboot()
07022c9c 00000054 t CTRPluginFramework::Shutdown()
07022cf0 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07022d14 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07022d28 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07022d3c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07022d50 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07022d64 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07022d78 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07022d8c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07022da0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07022db4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07022dc8 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07022f18 00000af4 T CTRPluginFramework::PluginMenuTools::InitMenu()
07023a0c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07023a0c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07023b9c 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07023ca8 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07023ce8 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07023ce8 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07023d80 00000120 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07023ea0 00000208 t CTRPluginFramework::UpdateScreenshotText()
070240a8 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
070241d8 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0702433c 00000454 t CTRPluginFramework::ScreenshotMenuCallback()
07024790 0000059c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07024d2c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07024d4c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07024d94 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07024dd0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07024de0 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07024e4c 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07024e4c 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07024e88 0000001c T CTRPluginFramework::SubMenu::operator()()
07024ea8 000001f8 T CTRPluginFramework::SubMenu::Draw()
070250a0 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07025180 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07025188 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070251a4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
070251dc 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070251dc 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07025260 000001a4 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07025404 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07025404 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07025408 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07025408 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0702540c 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0702540c 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07025410 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07025424 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07025438 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0702544c 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
070255f4 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
070256e8 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07025824 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070258a8 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07025b08 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07025b44 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07025ba4 00000258 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
07025dfc 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07025fdc 00000274 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07026250 000000e4 T CTRPluginFramework::HexEditor::~HexEditor()
07026250 000000e4 T CTRPluginFramework::HexEditor::~HexEditor()
07026334 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07026350 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07026408 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07026424 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07026498 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
070264c4 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07026500 00000010 T CTRPluginFramework::HexEditor::Refresh()
07026510 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07026554 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
0702658c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
070265b8 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07026638 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
070266d0 000000dc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
070267ac 000000cc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07026878 000000bc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07026934 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07026ae8 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07026af8 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07026b08 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07026b18 000002ec T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07026b18 000002ec T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07026e04 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07026e44 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0702700c 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0702704c 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
070270b8 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702718c 00000104 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07027290 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
070272e8 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
070273cc 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07027550 00000068 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
070275b8 00000178 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07027730 000001c8 T CTRPluginFramework::HexEditor::_Update()
070278f8 00000294 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07027b8c 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07027ba0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07027ba0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07027bc8 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07027be4 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07027c44 0000022c T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07027e70 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07027e70 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07027f5c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07027f5c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0702804c 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07028054 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07028068 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07028074 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0702807c 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
070280a0 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
070280d0 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
070280ec 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07028154 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07028174 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07028174 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07028194 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
070281b0 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07028208 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07028208 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0702829c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702829c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070282fc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070282fc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702835c 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07028360 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070283cc 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07028450 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070284b0 000000c4 T CTRPluginFramework::GuideReader::_LoadBMP()
07028574 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
070285a8 000002c8 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07028870 000001c8 T CTRPluginFramework::GuideReader::GuideReader()
07028870 000001c8 T CTRPluginFramework::GuideReader::GuideReader()
07028a38 000003ec T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07028e24 0000015c T CTRPluginFramework::GuideReader::Draw()
07028f80 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07028ff4 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .constprop.0]
0702902c 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0702906c 00000048 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070290b4 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070290e8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0702916c 00000054 t void std::__new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070291c0 00000050 t void std::__new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029210 00000050 t void std::__new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029260 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029260 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029430 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029430 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702960c 00000070 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0702960c 00000070 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0702967c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07029684 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0702968c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07029694 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0702969c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
070296a4 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
070296ac 00000058 T CTRPluginFramework::KeyboardImpl::Clear()
07029704 00000188 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0702988c 0000049c T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07029d28 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07029eec 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
07029f54 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07029fe4 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0702a064 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0702a0e8 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0702a244 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
0702a3b0 000005a4 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0702a954 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0702a9b4 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0702aa28 000000a4 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0702aacc 0000054c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0702b018 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0702b088 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0702b090 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0702b104 00000108 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0702b20c 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
0702b238 00000104 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0702b33c 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0702b368 000002e0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0702b648 00000068 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0702b6b0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0702b6dc 00000108 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0702b7e4 000000fc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0702b8e0 000000c8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0702b9a8 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0702bf24 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0702c4a0 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0702c560 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0702ce1c 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
0702cedc 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702d930 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702d970 000000fc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0702da6c 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0702dc14 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0702dc5c 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0702dcb0 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0702dd00 000005a0 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702e2a0 0000035c T CTRPluginFramework::KeyboardImpl::Run()
0702e5fc 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702e5fc 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702e624 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0702e668 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0702e694 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0702e6a8 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0702e6cc 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702e750 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0702e86c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e8c8 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702e928 000000c0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
0702e9e8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702e9e8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702ec3c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702ec90 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702ecb4 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0702ecdc 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0702edc0 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0702eee0 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0702f0ac 00000028 W CTRPluginFramework::ARCode::~ARCode()
0702f0ac 00000028 W CTRPluginFramework::ARCode::~ARCode()
0702f0d4 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0702f108 00000014 t __tcf_0
0702f11c 00000180 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0702f29c 00000180 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0702f41c 00000118 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702f534 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0702f570 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0702f6bc 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702f6ec 000000c4 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0702f7b0 00000264 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0702fa14 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0702fae0 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0702fc9c 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0702fe3c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702fec0 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702ff20 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0702ff80 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07030098 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
070300f0 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
07030100 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0703026c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703026c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070306dc 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07030788 000004c8 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07030c50 00000124 t CTRPluginFramework::ClearSearchFolder()
07030d74 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07030da8 000002a0 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07031048 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07031070 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070310e0 00000108 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070311e8 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07031224 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07031488 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0703156c 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070315ac 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
070315dc 000002f4 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070318d0 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07031c7c 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07031ce0 00000050 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07031d30 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07031d30 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07031d6c 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07031ea4 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07032020 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07032078 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0703220c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07032224 000001b4 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070323d8 00000104 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
070324dc 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0703269c 00000104 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
070327a0 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07032828 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07032a4c 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07032a78 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07032ab4 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07032af0 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07032b2c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07032b68 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07032ba4 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
07032bd0 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07032c0c 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07032c48 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07032c84 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
07032cc0 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07032cec 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07032d28 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07032d54 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07032d80 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
07032dac 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
07032de8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07032e14 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07032e50 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07032e7c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07032eb0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07032eec 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07032f18 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07032f54 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07032f80 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07032fac 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07032fd8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07033004 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07033030 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0703305c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07033088 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070330b4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070330f0 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0703311c 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07033138 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0703316c 00000024 t fontGetSystemFont
07033190 00000010 T CTRPluginFramework::Glyph::Width() const
070331a0 000004d4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07033674 00000350 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
070339c4 000000c0 T CTRPluginFramework::Font::Initialize()
07033a84 00000198 W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07033c1c 000000c0 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07033cdc 00000128 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07033e04 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07033e90 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07033eb0 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07033ef8 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07033f7c 00000020 T CTRPluginFramework::Button::~Button()
07033f7c 00000020 T CTRPluginFramework::Button::~Button()
07033f9c 0000001c T CTRPluginFramework::Button::~Button()
07033fb8 0000015c T CTRPluginFramework::Button::Draw()
07034114 00000070 T CTRPluginFramework::Button::operator()()
07034184 000001a8 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0703432c 0000017c T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703432c 0000017c T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070344a8 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070344a8 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070344c8 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070344c8 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07034560 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07034560 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07034574 00000018 T CTRPluginFramework::Button::Enable(bool)
0703458c 00000010 T CTRPluginFramework::Button::Enable()
0703459c 00000010 T CTRPluginFramework::Button::Disable()
070345ac 00000010 T CTRPluginFramework::Button::Lock()
070345bc 00000010 T CTRPluginFramework::Button::Execute()
070345cc 00000018 T CTRPluginFramework::Button::SetState(bool)
070345e4 00000010 T CTRPluginFramework::Button::GetState() const
070345f4 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070345fc 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07034680 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07034800 00000190 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07034990 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07034a30 000001e0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07034c10 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07034c40 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07034c40 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07034cfc 00000028 T CTRPluginFramework::Window::~Window()
07034cfc 00000028 T CTRPluginFramework::Window::~Window()
07034d24 00000064 T CTRPluginFramework::Window::Draw() const
07034d88 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07034e64 00000018 T CTRPluginFramework::Window::DrawButton() const
07034e7c 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07034e94 00000018 T CTRPluginFramework::Window::MustClose() const
07034eac 00000028 T CTRPluginFramework::Window::Close() const
07034ed4 00000004 T CTRPluginFramework::Window::GetRect() const
07034ed8 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07034f0c 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07034f8c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07034fac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07034fac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07034fc0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07034fc0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07034fe0 00000024 T CTRPluginFramework::UIContainer::Draw()
07035004 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07035038 00000104 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0703513c 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07035170 00000008 W CTRPluginFramework::Drawable::operator()()
07035178 000000f8 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07035270 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07035270 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
070352fc 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070352fc 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070353b4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070353b4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07035440 00000040 T CTRPluginFramework::TouchKey::Clear()
07035480 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07035480 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070354a0 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
070354bc 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070354c4 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
070354cc 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0703553c 00000070 T CTRPluginFramework::TouchKey::Draw()
070355ac 000000e0 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703568c 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07035694 00000104 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07035798 000001a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07035798 000001a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07035938 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07035958 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07035978 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
070359a4 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
070359d8 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07035a00 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07035a28 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07035a48 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07035a78 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07035ac0 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07035b04 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
07035c48 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07035c74 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07035c74 00000040 t __tls_init
07035cb4 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07035d00 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07035d9c 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07035e30 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07035ee0 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07035f9c 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07036054 00000094 T CTRPluginFramework::ComboBox::Draw()
070360e8 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07036154 000000ac T CTRPluginFramework::ComboBox::operator()()
07036200 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07036200 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
0703624c 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07036268 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036268 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070362b4 0000003c T CTRPluginFramework::ComboBox::Clear()
070362f0 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036340 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070363c0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
07036414 0000000c T CTRPluginFramework::OSDImpl::Lock()
07036420 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0703643c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07036448 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07036530 0000019c T CTRPluginFramework::OSDImpl::WaitFramePaused()
070366cc 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07036778 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
070367a8 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0703682c 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07036830 000002fc T CTRPluginFramework::TextBox::Draw()
07036b2c 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
07036b58 00000094 T CTRPluginFramework::TextBox::TextBox()
07036b58 00000094 T CTRPluginFramework::TextBox::TextBox()
07036bec 0000000c T CTRPluginFramework::TextBox::Open() const
07036bf8 0000000c T CTRPluginFramework::TextBox::Close() const
07036c04 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07036c10 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07036e38 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07036e44 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07036ed8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07036f8c 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07036fe4 0000009c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07037080 00000234 T CTRPluginFramework::TextBox::_GetTextInfos()
070372b4 00000188 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070372b4 00000188 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0703743c 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037524 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0703753c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070375c0 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070375e4 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07037608 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07037608 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07037640 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07037648 00000008 T CTRPluginFramework::BMPImage::Width() const
07037650 00000008 T CTRPluginFramework::BMPImage::Height() const
07037658 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07037660 00000010 T CTRPluginFramework::BMPImage::data() const
07037670 0000001c T CTRPluginFramework::BMPImage::end() const
0703768c 00000014 W CTRPluginFramework::BMPImage::DataClear()
070376a0 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070376a0 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0703772c 00000034 T CTRPluginFramework::BMPImage::Unload()
07037760 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07037934 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0703797c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
070379ac 00000128 T CTRPluginFramework::BMPImage::OptimiseForRendering()
07037ad4 000000c8 T CTRPluginFramework::BMPImage::Draw(int, int)
07037b9c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07037ba4 000000f0 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07037c94 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07037d64 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07037dd0 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07037df4 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07037f10 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07037f10 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07037f64 00000300 T CTRPluginFramework::BMPImage::_LoadBitmap()
07038264 000000a8 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038264 000000a8 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703830c 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07038358 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07038620 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
070386e4 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
07038830 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0703899c 00000018 t __tcf_0
070389b4 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07038b58 0000011c T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07038c74 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07038d08 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07038dac 0000031c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070390c8 0000004c W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07039114 000001c8 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070392dc 000000fc W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
070393d8 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07039418 00000690 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07039aa8 000001a4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07039c4c 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07039ce0 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07039d44 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07039df0 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
07039f60 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07039fb8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07039fb8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703a03c 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0703a11c 0000012c T CTRPluginFramework::InstallOSD()
0703a248 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
0703a2f4 00000008 W __gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > std::next<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, std::iterator_traits<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >::difference_type)
0703a2fc 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0703a3ec 000001a4 T CTRPluginFramework::OSDImpl::Update()
0703a590 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0703a5e8 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0703a6b0 000005ec T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0703ac9c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0703ad28 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0703adbc 00000080 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0703ae3c 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703aea8 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703aea8 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703b020 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703b020 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703b178 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0703b23c 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0703b4fc 00000204 T CTRPluginFramework::MessageBoxImpl::operator()()
0703b700 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0703b82c 00000120 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0703b94c 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0703baf0 000001cc T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0703bcbc 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0703bd20 0000023c T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0703bf5c 000005a4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0703c500 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0703c984 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0703c9f8 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0703ca68 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0703ca68 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0703cadc 000000a4 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0703cadc 000000a4 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0703cb80 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0703cb88 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
0703cbbc 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0703cc88 000000fc T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0703cd84 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0703cd9c 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0703cdb0 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0703cdc8 00000048 T CTRPluginFramework::TouchKeyString::operator()()
0703ce10 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
0703ce18 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703ce18 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703ce38 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703ce54 0000007c T CTRPluginFramework::NumericTextBox::Draw()
0703ced0 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703cf78 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
0703cfb0 00000064 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0703d014 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
0703d10c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0703d11c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0703d12c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0703d134 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0703d140 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0703d140 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0703d1a8 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703d21c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0703d2a0 00000334 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0703d5d4 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0703d64c 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0703d6bc 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0703d6f4 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0703d774 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703dbbc 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703dddc 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0703de80 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0703df40 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0703e000 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0703e0b0 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0703e140 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0703e2b8 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703e3cc 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0703e474 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703e4d8 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0703e56c 00000140 T ARM_Disasm::Decode01(unsigned long)
0703e6ac 00000028 T ARM_Disasm::Decode10(unsigned long)
0703e6d4 00000078 T ARM_Disasm::Decode11(unsigned long)
0703e74c 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0703e7a0 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0703e7f0 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0703e908 000000c4 T ARM_Disasm::Decode00(unsigned long)
0703e9cc 00000030 T ARM_Disasm::Decode(unsigned long)
0703e9fc 00000114 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
0703eb10 0000003c W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0703eb4c 00000340 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0703ee8c 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0703f188 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703f20c 00000110 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f31c 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703f660 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703f6f0 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703f6f0 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703f814 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0703f850 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f940 00000084 T CTRPluginFramework::ARCode::Update()
0703f9c4 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703f9c4 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703f9e8 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0703fa10 0000010c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703fa10 0000010c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703fb1c 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0703fb1c 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0703fb50 0000003c T CTRPluginFramework::ARCodeContext::Update()
0703fb8c 000000a8 T CTRPluginFramework::ARCodeContext::Clear()
0703fc34 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0703fcf4 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0703fd0c 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .constprop.0] [clone .isra.0]
0703fd24 00000018 t __tcf_0
0703fd3c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703fde4 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703fed4 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703ff58 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0703ffb4 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
070400b8 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
070400c8 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070400e0 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07040130 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040180 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070401c8 000004e8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070406b0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070406b0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070406f4 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07040714 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07040754 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0704087c 0000012c W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
070409a8 000006e4 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0704108c 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0704108c 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070410f4 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07041110 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07041160 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07041208 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041208 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041254 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07041370 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07041400 00000154 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07041554 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07041594 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07041618 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07041674 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070416a8 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07041750 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070417bc 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0704180c 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0704186c 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0704186c 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070418e4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070418e4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
070418e4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070418e4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07041930 00001418 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07042d48 0000019c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07042d48 0000019c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07042ee4 000002bc T CTRPluginFramework::ARCodeEditor::_RenderTop()
070431a0 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0704322c 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0704322c 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0704324c 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07043260 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070432a4 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
070432d8 00000124 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070433fc 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07043438 00000068 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
070434a0 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
070434c4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
070434ec 00000028 t __tcf_0
07043514 000002fc T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07043810 00000698 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07043ea8 000000f8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07043fa0 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07044058 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
070444cc 000003c4 T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07044890 00000124 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
070449b4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
07044a04 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07044a70 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07044af4 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
07044b20 00000100 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07044c20 000001f0 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07044e10 000001f4 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07045004 000000bc T CTRPluginFramework::Preferences::LoadSettings()
070450c0 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07045178 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
07045230 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0704528c 0000009c T CTRPluginFramework::Preferences::LoadBackgrounds()
07045328 0000015c T CTRPluginFramework::Preferences::WriteSettings()
07045484 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
070454e4 00000004 T CTRPluginFramework::Preferences::Initialize()
070454e8 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
070455d8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07045604 0000000c t __tcf_0
07045610 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07045610 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07045638 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
070456b0 00000048 T CTRPluginFramework::LineWriter::Flush()
070456f8 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
070456f8 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07045714 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045778 00000018 T CTRPluginFramework::LineWriter::Close()
07045790 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07045790 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
070457bc 00000018 T CTRPluginFramework::LineReader::~LineReader()
070457bc 00000018 T CTRPluginFramework::LineReader::~LineReader()
070457d4 00000100 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070458d4 0000000c T CTRPluginFramework::FwkSettings::Get()
070458e0 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
070459ac 00000010 T CTRPluginFramework::System::IsNew3DS()
070459bc 00000010 T CTRPluginFramework::System::Reboot()
070459cc 0000000c T CTRPluginFramework::HookContext::GetCurrent()
070459d8 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07045a00 00000048 T CTRPluginFramework::Hook::Hook()
07045a00 00000048 T CTRPluginFramework::Hook::Hook()
07045a48 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07045a48 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07045a70 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07045a70 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07045a84 00000060 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07045ae4 0000004c T CTRPluginFramework::Hook::~Hook()
07045ae4 0000004c T CTRPluginFramework::Hook::~Hook()
07045b30 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07045b4c 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07045b74 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07045b84 0000001c T CTRPluginFramework::Hook::IsEnabled()
07045ba0 00000120 T CTRPluginFramework::Hook::Enable()
07045cc0 00000030 T CTRPluginFramework::Hook::Disable()
07045cf0 00000008 T CTRPluginFramework::Hook::GetContext() const
07045cf8 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07045d38 00000028 T CTRPluginFramework::Touch::IsDown()
07045d60 00000028 T CTRPluginFramework::Touch::GetPosition()
07045d88 00000020 T CTRPluginFramework::Time::AsSeconds() const
07045da8 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07045dd0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07045dd0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07045dd4 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
07045dd8 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
07045e08 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07045e1c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
07045e20 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
07045e54 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07045e54 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07045f00 00000048 T CTRPluginFramework::Task::Start() const
07045f48 0000004c T CTRPluginFramework::Task::Start(void*) const
07045f94 00000064 T CTRPluginFramework::Task::Wait() const
07045ff8 0000002c t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07046024 00000290 T __ctrpf_getThreadVars
070462b4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
070462b4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
070462e8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070462e8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07046308 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0704635c 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
070463a4 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
070463ac 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
070463e4 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0704641c 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07046420 0000000c T CTRPluginFramework::Sound::Sound()
07046420 0000000c T CTRPluginFramework::Sound::Sound()
0704642c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704642c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07046440 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07046440 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07046474 000000bc T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07046530 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
070465a0 00000054 T CTRPluginFramework::Sound::~Sound()
070465a0 00000054 T CTRPluginFramework::Sound::~Sound()
070465f4 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0704660c 00000040 T CTRPluginFramework::Sound::Play(int, int)
0704664c 00000008 T CTRPluginFramework::Sound::Play(int)
07046654 00000008 T CTRPluginFramework::Sound::Play()
0704665c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704665c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704666c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704666c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07046688 000003ac t cwav_initialize
07046a34 000000f4 t cwav_stopImpl.part.0
07046b28 00000004 T cwavUseEnvironment
07046b2c 00000034 T cwavSetVAToPACallback
07046b60 00000050 T cwavLoad
07046bb0 0000049c T cwavPlay
0704704c 00000064 T cwavStop
070470b0 00000170 T cwavFree
07047220 00000004 T cwav_defaultVAToPA
07047224 00000004 T cwavEnvUseEnvironment
07047228 00000008 T cwavEnvGetEnvironment
07047230 00000004 T cwavEnvInitialize
07047234 00000004 T cwavEnvFinalize
07047238 00000014 T cwavEnvCompatibleEncoding
0704724c 00000008 T cwavEnvGetChannelAmount
07047254 00000018 T cwavEnvIsChannelAvailable
0704726c 000000f8 T cwavEnvPlay
07047364 00000004 T cwavEnvChannelIsPlaying
07047368 00000004 T cwavEnvStop
0704736c 0000003c T fontEnsureMappedExtension
070473a8 0000002c W MemBlock::Create(unsigned char*, unsigned long)
070473d4 00000034 W MemPool::DelBlock(MemBlock*)
07047408 0000005c T MemPool::CoalesceRight(MemBlock*)
07047464 00000100 T MemPool::Allocate(MemChunk&, unsigned long, int)
07047564 00000100 T MemPool::Deallocate(MemChunk const&)
07047664 00000020 T MemPool::GetFreeSpace()
07047684 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07047684 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07047748 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07047750 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
07047768 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07047768 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07047790 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
07047860 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07047920 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070479a4 0000005c W CTRPluginFramework::Search::~Search()
070479a4 0000005c W CTRPluginFramework::Search::~Search()
07047a00 00000044 T CTRPluginFramework::Search32::~Search32()
07047a00 00000044 T CTRPluginFramework::Search32::~Search32()
07047a44 0000001c T CTRPluginFramework::Search32::~Search32()
07047a60 0000001c W CTRPluginFramework::Search::~Search()
07047a7c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07047a7c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07047c80 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07047c80 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07047ca0 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07047ca0 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07047d34 00000124 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07047e58 000001ac T CTRPluginFramework::Search32::SecondSearchSpecified()
07048004 00000108 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0704810c 00000194 T CTRPluginFramework::Search32::SecondSearchUnknown()
070482a0 00000148 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070483e8 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07048434 0000013c T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07048570 0000013c T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
070486ac 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07048714 000000e8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070487fc 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07048838 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
070488b8 00000104 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070489bc 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07048a08 0000031c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07048d24 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07048f84 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070491fc 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704945c 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07049490 000002ec T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704977c 00000044 T CTRPluginFramework::Search::UpdateProgress()
070497c0 00000048 T CTRPluginFramework::Search::Cancel()
07049808 00000190 T CTRPluginFramework::Search::CheckNextRegion()
07049998 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07049a1c 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07049a7c 00000008 T CTRPluginFramework::Search::GetHeader() const
07049a84 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07049acc 0000000c T CTRPluginFramework::Search::GetType() const
07049ad8 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07049af0 00000070 T CTRPluginFramework::Search::WriteHeader()
07049b60 00000314 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07049b60 00000314 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07049e74 00000058 T CTRPluginFramework::Search::WriteResults()
07049ecc 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07049f14 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0704a140 00000108 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0704a248 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0704a2cc 000001ac T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a2cc 000001ac T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a478 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0704a5b4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0704a604 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0704a688 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0704a6b8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0704a6b8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0704a704 00000384 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0704aa88 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0704ab38 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0704ac74 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0704ac9c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704ad00 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0704adf0 000002a8 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0704b098 00000378 T CTRPluginFramework::GatewayRAMDumper::operator()()
0704b410 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0704b47c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0704b500 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0704b560 000000f0 W std::__cxx11::to_string(unsigned long)
0704b650 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0704b6cc 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0704b780 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0704b90c 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0704b964 00000148 T CTRPluginFramework::SearchMenu::_Export()
0704baac 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0704bc04 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0704bc04 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0704bcc0 00000598 T CTRPluginFramework::SearchMenu::Draw()
0704c258 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
0704c374 00000230 T CTRPluginFramework::SearchMenu::Update()
0704c5a8 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0704cab8 000000e4 T CTRPluginFramework::Converter::Converter()
0704cab8 000000e4 T CTRPluginFramework::Converter::Converter()
0704cb9c 00000010 T CTRPluginFramework::Converter::Instance()
0704cbac 00000108 T CTRPluginFramework::Converter::_Draw()
0704ccb4 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0704cedc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0704cedc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0704cee0 00000014 T CTRPluginFramework::FloatingButton::Draw()
0704cef4 00000014 T CTRPluginFramework::FloatingButton::operator()()
0704cf08 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0704cf1c 000001ac T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0704d0c8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0704d0c8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0704d108 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0704d12c 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0704d150 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0704d174 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0704d19c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0704d1c4 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0704d1ec 000000f8 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0704d2e4 0000199c T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0704ec80 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0704ed30 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0704ed50 00000450 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704f1a0 00000454 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704f5f4 0000044c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704fa40 00000618 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07050058 000008b0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07050908 000008a8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070511b0 00000868 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07051a18 00000c38 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07052650 00000848 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07052e98 000008a8 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07053740 00000894 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07053fd4 00000dac T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07054d80 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070559e4 00000718 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070560fc 000003fc T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070564f8 000006b8 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07056bb0 0000000c T __sync_init
07056bbc 00000018 T __sync_fini
07056bd4 0000002c T syncArbitrateAddressWithTimeout
07056c00 0000001c T LightLock_Init
07056c1c 000000b0 T LightLock_Lock
07056ccc 00000040 T LightLock_Unlock
07056d0c 00000024 T RecursiveLock_Init
07056d30 00000030 T RecursiveLock_Lock
07056d60 00000078 T RecursiveLock_TryLock
07056dd8 00000054 T RecursiveLock_Unlock
07056e2c 00000040 T LightEvent_Init
07056e6c 000000a4 T LightEvent_Clear
07056f10 00000048 T LightEvent_Pulse
07056f58 000000c8 T LightEvent_Signal
07057020 000000b0 T LightEvent_Wait
070570d0 00000014 T LightSemaphore_Init
070570e4 00000094 T LightSemaphore_Acquire
07057178 00000064 T LightSemaphore_Release
070571dc 00000084 W envGetHandle
07057260 00000050 W envDestroyHandles
070572b0 00000074 T osConvertVirtToPhys
07057324 00000054 T osGetTimeRef
07057378 000000ec T osGetTime
07057464 00000094 T fontEnsureMapped
070574f8 00000100 T fontGlyphIndexFromCodePoint
070575f8 00000070 T fontGetCharWidthInfo
07057668 00000130 T srvInit
07057798 00000058 T srvExit
070577f0 000000a0 T srvGetServiceHandleDirect
07057890 00000038 T srvGetServiceHandle
070578c8 00000038 T srvPublishToSubscriber
07057900 000000b4 t mappableFindAddressWithin
070579b4 00000028 T mappableInit
070579dc 00000080 T mappableAlloc
07057a5c 00000004 T mappableFree
07057a60 000000a4 T cfguInit
07057b04 0000003c T cfguExit
07057b40 00000054 T CFGU_GetSystemLanguage
07057b94 000000f0 T gspExit
07057c84 0000008c T acInit
07057d10 0000003c T acExit
07057d4c 000000a4 T amInit
07057df0 0000003c T amExit
07057e2c 00000158 T aptSendCommand
07057f84 00000030 T aptHook
07057fb4 00000030 T aptUnhook
07057fe4 00000028 T APT_PrepareToCloseApplication
0705800c 00000048 T APT_CloseApplication
07058054 0000007c T APT_CheckNew3DS
070580d0 00000048 T APT_GetSharedFont
07058118 00000024 W hidShouldUseIrrst
0705813c 0000018c T hidInit
070582c8 000000e8 T hidExit
070583b0 000002a4 T hidScanInput
07058654 00000010 T hidKeysHeld
07058664 00000010 T hidKeysDown
07058674 00000010 T hidKeysUp
07058684 00000018 T hidTouchRead
0705869c 0000000c T srvPmGetSessionHandle
070586a8 000000cc T fsInit
07058774 0000003c T fsExit
070587b0 000000cc T FSUSER_OpenFile
0705887c 000000bc T FSUSER_DeleteFile
07058938 000000f8 T FSUSER_RenameFile
07058a30 000000bc T FSUSER_DeleteDirectoryRecursively
07058aec 000000d4 T FSUSER_CreateFile
07058bc0 000000c4 T FSUSER_CreateDirectory
07058c84 000000f8 T FSUSER_RenameDirectory
07058d7c 000000b4 T FSUSER_OpenDirectory
07058e30 00000098 T FSUSER_OpenArchive
07058ec8 00000058 T FSFILE_Read
07058f20 00000060 T FSFILE_Write
07058f80 0000003c T FSFILE_GetSize
07058fbc 00000028 T FSFILE_SetSize
07058fe4 0000003c T FSFILE_Close
07059020 00000024 T FSFILE_Flush
07059044 00000028 T FSFILE_SetPriority
0705906c 00000050 T FSDIR_Read
070590bc 0000003c T FSDIR_Close
070590f8 00000010 T rbtree_init
07059108 000001b4 t do_insert
070592bc 00000008 T rbtree_insert
070592c4 00000090 T rbtree_rotate
07059354 00000318 T rbtree_remove
0705966c 00000074 T rbtree_find
070596e0 00000054 T encode_utf16
07059734 000000e0 T encode_utf8
07059814 00000064 T decode_utf16
07059878 0000013c T decode_utf8
070599b4 000000c0 T utf8_to_utf16
07059a74 T svcQueryMemory
07059aa4 T svcExitProcess
07059aac T svcCreateThread
07059acc T svcExitThread
07059ad4 T svcSleepThread
07059adc T svcSetThreadPriority
07059ae4 T svcReleaseMutex
07059aec T svcCreateEvent
07059b00 T svcSignalEvent
07059b08 T svcClearEvent
07059b10 T svcMapMemoryBlock
07059b18 T svcUnmapMemoryBlock
07059b20 T svcCreateAddressArbiter
07059b34 T svcArbitrateAddress
07059b4c T svcArbitrateAddressNoTimeout
07059b54 T svcCloseHandle
07059b5c T svcWaitSynchronization
07059b64 T svcWaitSynchronizationN
07059b8c T svcDuplicateHandle
07059ba0 T svcGetSystemTick
07059ba8 T svcGetSystemInfo
07059bc0 T svcGetProcessInfo
07059bd8 T svcConnectToPort
07059bec T svcSendSyncRequest
07059bf4 T svcOpenProcess
07059c08 T svcGetProcessId
07059c1c T svcGetThreadId
07059c30 T svcBreak
07059c38 T svcInvalidateProcessDataCache
07059c40 T svcFlushProcessDataCache
07059c48 T svcKernelSetState
07059c50 T svcQueryProcessMemory
07059c74 00000164 T irrstInit
07059dd8 000000cc T irrstExit
07059ea4 000000b4 T irrstScanInput
07059f58 00000024 T irrstKeysHeld
07059f7c 0000005c T rbtree_node_next
07059fd8 00000004 T operator delete(void*)
07059fdc 00000004 T operator delete(void*, std::nothrow_t const&)
07059fe0 00000004 T operator delete[](void*)
07059fe4 00000060 T __cxa_guard_acquire
0705a044 0000000c T __cxa_guard_release
0705a050 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0705a050 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0705a070 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0705a09c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0705a09c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0705a0ac 00000014 T std::get_new_handler()
0705a0c0 0000005c T operator new(unsigned int)
0705a11c 0000001c T operator new(unsigned int, std::nothrow_t const&)
0705a138 00000004 T operator new[](unsigned int)
0705a13c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0705a13c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0705a15c 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0705a188 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0705a1f4 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0705a2d0 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0705a314 00000004 T std::type_info::~type_info()
0705a314 00000004 T std::type_info::~type_info()
0705a318 00000008 T std::type_info::__is_pointer_p() const
0705a318 00000008 T std::type_info::__is_function_p() const
0705a320 0000004c T std::type_info::__equal(std::type_info const&) const
0705a320 0000004c T std::type_info::operator==(std::type_info const&) const
0705a36c 00000004 W std::allocator<char>::allocator()
0705a36c 00000004 W std::allocator<char>::allocator()
0705a370 00000004 W std::allocator<char>::~allocator()
0705a370 00000004 W std::allocator<char>::~allocator()
0705a374 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0705a388 00000014 T std::__detail::_List_node_base::_M_unhook()
0705a39c 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0705a40c 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0705a690 0000002c T std::__throw_bad_alloc()
0705a6bc 0000002c T std::__throw_bad_array_new_length()
0705a6e8 00000040 T std::__throw_logic_error(char const*)
0705a728 00000040 T std::__throw_invalid_argument(char const*)
0705a768 00000040 T std::__throw_length_error(char const*)
0705a7a8 00000040 T std::__throw_out_of_range(char const*)
0705a7e8 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0705a7f8 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0705a8e0 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0705a9c0 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0705a9cc 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0705aa20 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0705aa34 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0705aab8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0705aae0 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0705ab04 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0705ab28 000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705abdc 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0705acdc 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0705ad58 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
0705ad58 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
0705ad6c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0705ad6c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0705add8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0705add8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0705adfc 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0705ae98 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve()
0705af64 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0705afd4 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0705b048 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0705b08c 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0705b0a4 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0705b1c8 000002ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0705b474 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b4bc 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0705b520 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0705b5b0 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0705b5dc 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0705b624 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b658 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0705b6fc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0705b70c 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0705b780 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0705b7b0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0705b7fc 0000008c W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0705b888 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b888 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705b8b4 0000008c W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0705b940 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0705b940 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0705b98c 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0705b9ec 0000000c T std::bad_alloc::what() const
0705b9f8 00000020 T std::bad_alloc::~bad_alloc()
0705b9f8 00000020 T std::bad_alloc::~bad_alloc()
0705ba18 0000002c T std::bad_alloc::~bad_alloc()
0705ba44 0000000c T std::bad_array_new_length::what() const
0705ba50 00000020 T std::bad_array_new_length::~bad_array_new_length()
0705ba50 00000020 T std::bad_array_new_length::~bad_array_new_length()
0705ba70 0000002c T std::bad_array_new_length::~bad_array_new_length()
0705ba9c 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0705baf8 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0705bb0c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0705bb0c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0705bb2c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0705bb58 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0705bbc0 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0705bbec 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0705bc30 00000004 T operator delete(void*, unsigned int)
0705bc34 000000c8 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0705bcfc 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0705bd94 00000044 T __cxa_allocate_exception
0705bdd8 00000030 T __cxa_free_exception
0705be08 0000003c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0705be44 T __cxa_end_cleanup
0705be54 0000012c T __cxa_type_match
0705bf80 000000b4 T __cxa_begin_cleanup
0705c034 000000b4 T __gnu_end_cleanup
0705c0e8 000000cc T __cxa_begin_catch
0705c1b4 000000e0 T __cxa_end_catch
0705c294 00000004 T std::exception::~exception()
0705c294 00000004 T std::exception::~exception()
0705c298 00000004 T std::bad_exception::~bad_exception()
0705c298 00000004 T std::bad_exception::~bad_exception()
0705c29c 0000000c T transaction clone for std::exception::what() const
0705c29c 0000000c T std::exception::what() const
0705c2a8 0000000c T transaction clone for std::bad_exception::what() const
0705c2a8 0000000c T std::bad_exception::what() const
0705c2b4 00000018 T std::bad_exception::~bad_exception()
0705c2cc 0000000c T __cxa_get_globals_fast
0705c2d8 0000000c T __cxa_get_globals
0705c2e4 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0705c450 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0705c4a8 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0705c580 000006c8 T __gxx_personality_v0
0705cc48 00000014 T __cxxabiv1::__terminate(void (*)())
0705cc5c 00000018 T std::terminate()
0705cc74 0000000c T __cxxabiv1::__unexpected(void (*)())
0705cc80 00000018 T std::unexpected()
0705cc98 00000014 T std::get_terminate()
0705ccac 00000014 T std::get_unexpected()
0705ccc0 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0705cd20 00000058 T __cxa_init_primary_exception
0705cd78 00000054 T __cxa_throw
0705cdcc 000000b0 T __cxa_rethrow
0705ce7c 00000008 T std::logic_error::what() const
0705ce7c 00000008 T std::runtime_error::what() const
0705ce84 00000064 T std::logic_error::~logic_error()
0705ce84 00000064 T std::logic_error::~logic_error()
0705cee8 00000064 T std::length_error::~length_error()
0705cee8 00000064 T std::length_error::~length_error()
0705cf4c 00000064 T std::out_of_range::~out_of_range()
0705cf4c 00000064 T std::out_of_range::~out_of_range()
0705cfb0 00000064 T std::invalid_argument::~invalid_argument()
0705cfb0 00000064 T std::invalid_argument::~invalid_argument()
0705d014 0000006c T std::logic_error::~logic_error()
0705d080 0000006c T std::out_of_range::~out_of_range()
0705d0ec 0000006c T std::invalid_argument::~invalid_argument()
0705d158 0000006c T std::length_error::~length_error()
0705d1c4 000000d4 T std::logic_error::logic_error(char const*)
0705d1c4 000000d4 T std::logic_error::logic_error(char const*)
0705d298 00000020 T std::invalid_argument::invalid_argument(char const*)
0705d298 00000020 T std::invalid_argument::invalid_argument(char const*)
0705d2b8 00000020 T std::length_error::length_error(char const*)
0705d2b8 00000020 T std::length_error::length_error(char const*)
0705d2d8 00000020 T std::out_of_range::out_of_range(char const*)
0705d2d8 00000020 T std::out_of_range::out_of_range(char const*)
0705d2f8 0000008c W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0705d384 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0705d388 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0705d3f8 0000002c T __cxa_call_terminate
0705d424 00000138 T __cxa_call_unexpected
0705d560 0000027c T log2
0705d7dc 00000024 t with_errno
0705d800 00000050 T __math_divzero
0705d850 0000001c T __math_invalid
0705d870 0000013c T ceil
0705d9ac 000000b8 T ceilf
0705da68 00000144 T floor
0705dbac 00000068 T roundf
0705dc14 00000050 T sqrtf
0705dc64 00000008 T __ieee754_sqrtf
0705dc6c 00000044 T __popcountsi2
0705dcb0 00000030 T __aeabi_f2lz
0705dcb0 00000030 T __fixsfdi
0705dce0 00000040 T __aeabi_f2ulz
0705dce0 00000040 T __fixunssfdi
0705dd20 00000120 T __udivmoddi4
0705de40 00000018 t selfrel_offset31
0705de58 00000090 t search_EIT_table
0705dee8 00000040 t __gnu_unwind_get_pr_addr
0705df28 000000f4 t get_eit_entry
0705e01c 00000088 t restore_non_core_regs
0705e0a4 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0705e0b8 00000004 t _Unwind_DebugHook
0705e0bc 00000064 t unwind_phase2
0705e120 00000140 t unwind_phase2_forced
0705e260 000000a4 T __gnu_Unwind_RaiseException
0705e304 00000028 T __gnu_Unwind_ForcedUnwind
0705e32c 00000074 T __gnu_Unwind_Resume
0705e3a0 00000020 T __gnu_Unwind_Resume_or_Rethrow
0705e3c0 00000004 T _Unwind_Complete
0705e3c4 00000018 T _Unwind_DeleteException
0705e3dc 0000005c T _Unwind_VRS_Get
0705e438 0000002c t _Unwind_GetGR
0705e464 0000005c T _Unwind_VRS_Set
0705e4c0 0000002c t _Unwind_SetGR
0705e4ec 000000c0 T __gnu_Unwind_Backtrace
0705e5ac 00000414 t __gnu_unwind_pr_common
0705e9c0 00000008 T __aeabi_unwind_cpp_pr0
0705e9c8 00000008 W __aeabi_unwind_cpp_pr1
0705e9d0 00000008 W __aeabi_unwind_cpp_pr2
0705e9d8 000003dc T _Unwind_VRS_Pop
0705edb4 00000064 t next_unwind_byte
0705ee18 0000002c t _Unwind_GetGR.constprop.0
0705ee44 00000004 t unwind_UCB_from_context
0705ee48 00000418 T __gnu_unwind_execute
0705f260 00000048 T __gnu_unwind_frame
0705f2a8 00000010 T _Unwind_GetRegionStart
0705f2b8 0000001c T _Unwind_GetLanguageSpecificData
0705f2d4 00000008 T _Unwind_GetDataRelBase
0705f2dc 00000008 T _Unwind_GetTextRelBase
0705f2e4 00000014 T atexit
0705f2f8 00000020 T calloc
0705f318 000000c0 T _calloc_r
0705f3d8 00000010 T ctime
0705f3e8 0000000c T __errno
0705f3f4 0000015c T _fclose_r
0705f550 00000234 T __sflush_r
0705f784 00000094 T _fflush_r
0705f818 0000000c T _cleanup_r
0705f824 00000184 T __sinit
0705f9a8 0000000c T __sfp_lock_acquire
0705f9b4 0000000c T __sfp_lock_release
0705f9c0 000000f8 T _malloc_trim_r
0705fab8 000002e8 T _free_r
0705fda0 00000070 T _fwalk_reent
0705fe10 00000084 T __libc_init_array
0705fe94 00000018 T isspace
0705feac 00000018 T isxdigit
0705fec4 00000020 T localtime
0705fee4 0000035c T localtime_r
07060240 00000138 T __smakebuf_r
07060378 00000020 T memalign
07060398 0000014c T _memalign_r
070604e4 00000018 T malloc
070604fc 00000018 T free
07060514 000007e4 T _malloc_r
07060cf8 000000e4 T memchr
07060ddc 000000b0 T memcmp
07060e8c 00000118 T memcpy
07060fa4 00000150 T memmove
070610f4 000000f4 T memset
070611e8 0000000c T __malloc_lock
070611f4 0000000c T __malloc_unlock
07061200 00000020 T realloc
07061220 000004a0 T _realloc_r
070616c0 000000cc T snprintf
0706178c 00000064 T sprintf
070617f0 00000044 T __sread
07061834 00000008 T __seofread
0706183c 00000068 T __swrite
070618a4 00000044 T __sseek
070618e8 00000008 T __sclose
070618f0 0000012c t iso_year_adjust
07061a1c 000010b4 t __strftime.isra.0
07062ad0 00000004 T strftime
07062ad4 0000005c T strlen
07062b30 000000e4 T strncmp
07062c14 000000c4 T strncpy
07062cd8 00000048 T strnlen
07062d20 00000064 t sulp
07062d88 000013a8 T _strtod_l
07064130 000000f0 T strtof
07064220 00000244 t _strtoull_l.constprop.0
07064464 00000004 T _strtoull_r
07064468 000001c4 t _strtoul_l.constprop.0
0706462c 00000004 T _strtoul_r
07064630 00000028 T strtoul
07064658 0000066c t get_arg
07064cc8 00003334 T _svfprintf_r
07067ffc 0000003c T time
07068038 00000254 T __tzcalc_limits
0706828c 0000000c T __tz_lock
07068298 0000000c T __tz_unlock
070682a4 00000010 T _tzset_unlocked
070682b4 00000478 T _tzset_unlocked_r
0706872c 000000a4 T _vsnprintf_r
070687d0 00000038 T vsnprintf
07068808 00000054 T _wcrtomb_r
0706885c 00000028 T _wcsrtombs_r
07068884 0000000c T abs
07068890 00000020 T asctime
070688b0 00000080 T asctime_r
07068930 000000b0 T __register_exitproc
070689e0 000001b0 t quorem
07068b90 000011f8 T _dtoa_r
07069d88 000000f0 t rshift
07069e78 00000814 T __gethex
0706a68c 0000004c T __match
0706a6d8 0000029c T __hexnan
0706a974 000000c8 T _findenv_r
0706aa3c 00000018 T _getenv_r
0706aa54 0000000c T __gettzinfo
0706aa60 00000268 T gmtime_r
0706acc8 0000000c T labs
0706acd4 0000000c T _localeconv_r
0706ace0 00000010 T __locale_mb_cur_max
0706acf0 000002f8 T __utf8_mbtowc
0706afe8 00000088 T _Balloc
0706b070 0000001c T _Bfree
0706b08c 000000f4 T __multadd
0706b180 00000110 T __s2b
0706b290 00000060 T __hi0bits
0706b2f0 0000009c T __lo0bits
0706b38c 000000a8 T __i2b
0706b434 00000204 T __multiply
0706b638 00000124 T __pow5mult
0706b75c 00000140 T __lshift
0706b89c 00000058 T __mcmp
0706b8f4 000001ec T __mdiff
0706bae0 00000068 T __ulp
0706bb48 000000d0 T __b2d
0706bc18 00000120 T __d2b
0706bd38 00000078 T __ratio
0706bdb0 00000088 T __copybits
0706be38 0000005c T __any_on
0706be94 0000000c T nanf
0706bea0 00000088 T frexp
0706bf28 00000064 T siprintf
0706bf8c 00000074 T siscanf
0706c000 00000010 T nan
0706c010 000000cc T sniprintf
0706c0dc 000000f0 T strcpy
0706c1cc 000001a4 t _strtol_l.part.0
0706c370 0000003c T _strtol_r
0706c3ac 0000066c t get_arg
0706ca18 00000188 T __ssprint_r
0706cba0 00002210 T _svfiprintf_r
0706edb0 00000050 t get_arg
0706ee00 000000d4 T _sungetc_r
0706eed4 0000006c T __ssrefill_r
0706ef40 000000c4 T _sfread_r
0706f004 00002310 T __ssvfiscanf_r
07071314 000000a8 T __submore
070713bc 00000188 T _wcsnrtombs_l
07071544 0000004c T _wcsnrtombs_r
07071590 000000f0 T __utf8_wctomb
07071680 0000005c T __assert_func
070716dc 0000000c T __env_lock
070716e8 0000000c T __env_unlock
070716f4 0000003c T fiprintf
07071730 00000008 T iswspace
07071738 00000068 T _mbrtowc_r
070717a0 000000f4 T __sccl
07071894 0000022c t _strtoll_l.constprop.0
07071ac0 00000004 T _strtoll_r
07071ac4 0000066c t get_arg
07072130 00000030 T __sprint_r
07072160 000022ec T _vfiprintf_r
0707444c 000000d0 t __sbprintf
0707451c 0000013c T __swsetup_r
07074658 000004b4 T __sfvwrite_r
07074b0c 0000003c T iswspace_l
07074b48 000001d8 t __jp2uc
07074d20 0000009c T _jp2uc_l
07074dbc 0000008c T category
07074e48 00000008 t null_write
07074e50 00000078 T _fstat_r
07074ec8 00000030 T _gettimeofday_r
07074ef8 00000008 T _isatty_r
07074f00 00000084 T _lseek_r
07074f84 00000080 T _read_r
07075004 00000078 T _sbrk_r
0707507c 00000080 T _write_r
070750fc 00000008 T __flockfile
07075104 00000008 T __funlockfile
0707510c 0000003c T __get_handle
07075148 000000f4 T _close_r
0707523c 0000002c T __getreent
07075268 0000001c T __libc_lock_acquire
07075284 0000001c T __libc_lock_release
070752a0 0000001c T __libc_lock_init_recursive
070752bc 0000001c T __libc_lock_acquire_recursive
070752d8 0000001c T __libc_lock_release_recursive
070752f4 0000001c T __libc_lock_close_recursive
07075310 00000038 T __aeabi_d2lz
07075310 00000038 T __fixdfdi
07075348 00000040 T __aeabi_d2ulz
07075348 00000040 T __fixunsdfdi
07075388 T _fini
070775e8 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
070777d0 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
070777dc 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
070777f0 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
07077a44 00000004 R CTRPluginFramework::Color::SkyBlue
07077a48 00000004 R CTRPluginFramework::Color::Orange
07077a4c 00000004 R CTRPluginFramework::Color::LimeGreen
07077a50 00000004 R CTRPluginFramework::Color::ForestGreen
07077a54 00000004 R CTRPluginFramework::Color::Gainsboro
07077a58 00000004 R CTRPluginFramework::Color::DimGrey
07077a5c 00000004 R CTRPluginFramework::Color::DeepSkyBlue
07077a60 00000004 R CTRPluginFramework::Color::DarkGrey
07077a64 00000004 R CTRPluginFramework::Color::Brown
07077a68 00000004 R CTRPluginFramework::Color::BlackGrey
07077a6c 00000004 R CTRPluginFramework::Color::Green
07077a70 00000004 R CTRPluginFramework::Color::Gray
07077a74 00000004 R CTRPluginFramework::Color::Silver
07077a78 00000004 R CTRPluginFramework::Color::Magenta
07077a7c 00000004 R CTRPluginFramework::Color::Cyan
07077a80 00000004 R CTRPluginFramework::Color::Yellow
07077a84 00000004 R CTRPluginFramework::Color::Blue
07077a88 00000004 R CTRPluginFramework::Color::Red
07077a8c 00000004 R CTRPluginFramework::Color::White
07077a90 00000004 R CTRPluginFramework::Color::Black
07077d08 00000014 r CTRPluginFramework::defaultSoundFiles
07077d30 00000014 V vtable for CTRPluginFramework::MenuItem
07077d44 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07077d68 00000038 r CTRPluginFramework::stable
07077da0 00000038 r CTRPluginFramework::ktable
07077e15 00000023 r CTRPluginFramework::g_copyrightText
07077e38 00000013 r CTRPluginFramework::g_ctrpfText
070784b1 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0707857a 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
070787c0 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
070787e0 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07078800 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0707885c 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07078864 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07078880 0000001c R vtable for CTRPluginFramework::MenuEntryTools
070789f8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07078a00 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07078c04 0000001c R vtable for CTRPluginFramework::Button
07078c20 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07078c28 00000a00 r font
07079628 0000001c R vtable for CTRPluginFramework::TouchKey
07079644 0000001c R vtable for CTRPluginFramework::ComboBox
07079660 0000001c R vtable for CTRPluginFramework::TextBox
07079848 00000058 r CTRPluginFramework::g_OSDPattern
070798ac 0000001c R vtable for CTRPluginFramework::NumericTextBox
07079d44 00000040 r RegNames
07079d84 00000010 r shift_names
07079d94 00000040 r cond_names
07079e30 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0707a6a0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0707a6a8 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0707a6b0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0707a6b8 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0707a6cc 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0707a6d8 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0707a800 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0707a818 00000008 R CTRPluginFramework::Time::Zero
0707a820 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>
0707a83c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0707a844 00000384 r Search15_array
0707abc8 00000384 r UnCheckedCheckbox_array
0707af4c 00000384 r Unsplash15_array
0707b2d0 000009c4 r Plus25_array
0707bc94 000009c4 r EditFilled25_array
0707c658 000009c4 r GameControllerFilled25_array
0707d01c 000009c4 r AddFavorite25_array
0707d9e0 000009c4 r Cut25_array
0707e3a4 00000640 r CloseWindow20_array
0707e9e4 000009c4 r AddFavoriteFilled25_array
0707f3a8 00000384 r ClearSymbolFilled15_array
0707f72c 000009c4 r ClipboardFilled25_array
070800f0 00000384 r EnterKeyFilled15_array
07080474 000009c4 r CutFilled25_array
07080e38 00000e10 r DefaultKeyboardCustomIcon_array
07081c48 00000384 r CapsLockOn15_array
07081fcc 000009c4 r TrashFilled25_array
07082990 00000384 r RAM15_array
07082d14 00000384 r More15_array
07083098 000009c4 r InfoFilled25_array
07083a5c 00000640 r CloseWindowFilled20_array
0708409c 00000384 r EnterKey15_array
07084420 000009c4 r Duplicate25_array
07084de4 00000384 r File15_array
07085168 000009c4 r Edit25_array
07085b2c 000009c4 r DuplicateFilled25_array
070864f0 000009c4 r Save25_array
07086eb4 000009c4 r Clipboard25_array
07087878 000009c4 r Info25_array
0708823c 00000384 r Settings15_array
070885c0 000009c4 r KeyboardFilled25_array
07088f84 000009c4 r PlusFilled25_array
07089948 00000384 r ClearSymbol15_array
07089ccc 00000384 r About15_array
0708a050 00000384 r Shutdown15_array
0708a3d4 00000384 r Maintenance15_array
0708a758 00000384 r CheckedCheckbox_array
0708aadc 00000384 r Controller15_array
0708ae60 00000384 r HandCursor15_array
0708b1e4 000009c4 r Keyboard25_array
0708bba8 00000384 r CapsLockOnFilled15_array
0708bf2c 00000384 r UserManualFilled15_array
0708c2b0 000009c4 r Trash25_array
0708cc74 00000384 r GameController15_array
0708cff8 00000384 r Grid15_array
0708d37c 00000384 r Star15_array
0708d700 000009c4 r GameController25_array
0708e0c4 00001900 r Rocket40_array
0708f9c4 00000384 r FolderFilled_array
0708fd48 00000384 r Restart15_array
070900f8 00000038 R vtable for CTRPluginFramework::Search32
07090198 00000038 R vtable for CTRPluginFramework::Search
070903d4 0000001c R vtable for CTRPluginFramework::FloatingButton
07090478 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0709049c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070904a8 00000014 R vtable for __gnu_cxx::recursive_init_error
070904bc 00000001 R std::nothrow
070904c0 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070904e8 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070904f4 0000002c R vtable for __cxxabiv1::__si_class_type_info
07090520 0000000d R typeinfo name for std::type_info
07090530 00000008 R typeinfo for std::type_info
07090538 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07090548 00000404 R std::__detail::__prime_list
0709094c 00000018 V typeinfo name for std::_Sp_make_shared_tag
07090964 00000008 V typeinfo for std::_Sp_make_shared_tag
07090a98 0000000d R typeinfo name for std::bad_alloc
07090aa8 0000000c R typeinfo for std::bad_alloc
07090ab4 00000014 R vtable for std::bad_alloc
07090ae4 00000019 R typeinfo name for std::bad_array_new_length
07090b00 0000000c R typeinfo for std::bad_array_new_length
07090b0c 00000014 R vtable for std::bad_array_new_length
07090b20 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07090b44 0000000c R typeinfo for __cxxabiv1::__class_type_info
07090b50 0000002c R vtable for __cxxabiv1::__class_type_info
07090ba0 0000000d R typeinfo name for std::exception
07090bb0 00000008 R typeinfo for std::exception
07090bb8 00000012 R typeinfo name for std::bad_exception
07090bcc 0000000c R typeinfo for std::bad_exception
07090bd8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07090bf8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07090c00 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07090c24 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07090c2c 00000014 R vtable for std::bad_exception
07090c40 00000010 R typeinfo name for std::logic_error
07090c50 0000000c R typeinfo for std::logic_error
07090c5c 00000015 R typeinfo name for std::invalid_argument
07090c74 0000000c R typeinfo for std::invalid_argument
07090c80 00000011 R typeinfo name for std::length_error
07090c94 0000000c R typeinfo for std::length_error
07090ca0 00000011 R typeinfo name for std::out_of_range
07090cb4 0000000c R typeinfo for std::out_of_range
07090cc0 00000014 R vtable for std::logic_error
07090cd4 00000014 R vtable for std::invalid_argument
07090ce8 00000014 R vtable for std::length_error
07090cfc 00000014 R vtable for std::out_of_range
07090d58 00000890 R __log2_data
070915e8 00000004 R _global_impure_ptr
070915ec 00000060 R __month_lengths
070916dc 00000014 r fpinan.0
070916f0 00000014 r fpi.1
07091708 00000028 r tinytens
0709176c 00000010 r zeroes.0
0709177c 00000010 r blanks.1
070918e4 000000fc R _C_time_locale
07091a54 00000024 r mon_name.0
07091a78 00000015 r day_name.1
07091a90 00000101 R _ctype_
07091c54 00000100 R __hexdig
07091de4 0000000c r p05.0
07091df0 00000028 R __mprec_bigtens
07091e18 000000c8 R __mprec_tens
07091ee0 00000010 r zeroes.0
07091ef0 00000010 r blanks.1
07091f00 0000006c R __action_table
07091f6c 0000006c R __state_table
07091fd8 00000100 R __chclass
070920d8 00000022 r basefix.0
0709213c 00000010 r zeroes.0
0709214c 00000010 r blanks.1
07092170 00001a7c r d02f4
07093bec 0000172a r b02cf
07095318 00000040 r a8
07095358 000000a2 r a7
070953fc 00000070 r a6
0709546c 0000005b r a3
070954c8 000000bc r a2
07095584 000000bc r a1
07095640 00003528 r categories
07098b70 00000070 R dotab_stdnull
07098be0 R __tdata_align
07098d08 R __exidx_start
07098fc0 R __exidx_end
07098fc0 00000004 D cwavCurrentVAPAConvCallback
07098fc4 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
07098fc8 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
07098fcc 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
07098fd0 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
07098fd4 00000010 d CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
07098fe4 00000010 d CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
07098ff4 00000001 D CTRPluginFramework::g_keepRunning
07098ff5 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
07098ff8 00000004 D CTRPluginFramework::Screenshot::Screens
07098ffc 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07099000 00000001 D CTRPluginFramework::SystemImpl::Language
07099001 00000001 D CTRPluginFramework::EventManager::_refresh
07099002 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07099004 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07099008 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0709900c 00000004 D CTRPluginFramework::RendererPriv::g_customColor
07099010 000001f4 D opcode_names
07099204 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07099208 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0709920c 00000004 D CTRPluginFramework::FwkSettings::Header
07099210 00000004 D g_charPerSheet
07099214 00000004 D Search15
07099218 00000004 D UnCheckedCheckbox
0709921c 00000004 D Unsplash15
07099220 00000004 D Plus25
07099224 00000004 D EditFilled25
07099228 00000004 D GameControllerFilled25
0709922c 00000004 D AddFavorite25
07099230 00000004 D Cut25
07099234 00000004 D CloseWindow20
07099238 00000004 D AddFavoriteFilled25
0709923c 00000004 D ClearSymbolFilled15
07099240 00000004 D ClipboardFilled25
07099244 00000004 D EnterKeyFilled15
07099248 00000004 D CutFilled25
0709924c 00000004 D DefaultKeyboardCustomIcon
07099250 00000004 D CapsLockOn15
07099254 00000004 D TrashFilled25
07099258 00000004 D RAM15
0709925c 00000004 D More15
07099260 00000004 D InfoFilled25
07099264 00000004 D CloseWindowFilled20
07099268 00000004 D EnterKey15
0709926c 00000004 D Duplicate25
07099270 00000004 D File15
07099274 00000004 D Edit25
07099278 00000004 D DuplicateFilled25
0709927c 00000004 D Save25
07099280 00000004 D Clipboard25
07099284 00000004 D Info25
07099288 00000004 D Settings15
0709928c 00000004 D KeyboardFilled25
07099290 00000004 D PlusFilled25
07099294 00000004 D ClearSymbol15
07099298 00000004 D About15
0709929c 00000004 D Shutdown15
070992a0 00000004 D Maintenance15
070992a4 00000004 D CheckedCheckbox
070992a8 00000004 D Controller15
070992ac 00000004 D HandCursor15
070992b0 00000004 D Keyboard25
070992b4 00000004 D CapsLockOnFilled15
070992b8 00000004 D UserManualFilled15
070992bc 00000004 D Trash25
070992c0 00000004 D GameController15
070992c4 00000004 D Grid15
070992c8 00000004 D Star15
070992cc 00000004 D GameController25
070992d0 00000004 D Rocket40
070992d4 00000004 D FolderFilled
070992d8 00000004 D Restart15
070992dc 00000004 d kCount
070992e0 00000004 d kInterval
070992e4 00000004 d kDelay
070992e8 00000004 D __cxxabiv1::__unexpected_handler
070992ec 00000004 D __cxxabiv1::__terminate_handler
070992f0 00000004 D _impure_ptr
070992f8 00000460 d impure_data
07099758 00000004 D __malloc_sbrk_base
0709975c 00000004 D __malloc_trim_threshold
07099760 00000408 D __malloc_av_
07099b68 00000008 D _tzname
07099b70 00000058 d tzinfo
07099bc8 0000016c D __global_locale
07099d34 00000004 D environ
07099d38 0000008c D devoptab_list
07099dc4 00001000 d handles
0709adc4 0000000c d __stderr_handle
0709add0 0000000c d __stdout_handle
0709addc 0000000c d __stdin_handle
0709adfc d _GLOBAL_OFFSET_TABLE_
0709ae08 D __tdata_lma
0709ae14 d __frame_dummy_init_array_entry
0709ae14 D __init_array_start
0709ae14 B __preinit_array_end
0709ae14 B __preinit_array_start
0709ae14 D __tdata_lma_end
0709ae7c d __do_global_dtors_aux_fini_array_entry
0709ae7c D __init_array_end
0709aed4 D __bss_start__
0709aed4 00000004 b ncsndMutex
0709aed8 00000004 b ncsndCmdCurOff
0709aedc 00000004 b ncsndCmdStartOff
0709aee0 00000004 B ncsndSharedMem
0709aee4 00000004 B ncsndCSNDHandle
0709aee8 00000004 B ncsndChannels
0709aeec 00000004 b ncsndRefCount
0709aef0 00000010 B ncsndOffsets
0709af00 00000004 B ncsndSharedMemSize
0709af04 00000004 b ncsndSharedMemBlock
0709af08 00000001 b ncsndCookieHooked
0709af0c 0000000c b ncsndCookie
0709af18 b saved_stack
0709af20 00000004 b cwavListCount
0709af24 00000004 b cwavList
0709af28 00000004 b cwavAddedToList
0709af2c b completed.1
0709af30 b object.0
0709af48 00000004 B CTRPluginFramework::offset
0709af4c 00000004 B CTRPluginFramework::data
0709af50 000000b4 b CTRPluginFramework::original_speed
0709b004 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0709b008 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0709b00c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0709b010 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0709b014 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::cpuPointer
0709b018 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0709b01c 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
0709b020 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
0709b021 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
0709b022 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0709b024 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
0709b030 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
0709b034 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0709b040 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0709b044 00000004 b CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::address
0709b048 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0709b049 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0709b04a 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0709b04b 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0709b04c 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0709b050 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0709b054 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
0709b060 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
0709b064 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0709b070 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0709b074 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
0709b078 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
0709b07c 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
0709b07d 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0709b07e 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0709b080 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0709b084 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0709b088 000009c4 b CTRPluginFramework::g_rng
0709ba4c 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0709ba50 00000004 B CTRPluginFramework::Process::OnPauseResume
0709ba54 00000004 B CTRPluginFramework::Process::exceptionCallback
0709ba58 00000004 B CTRPluginFramework::Controller::_keysReleased
0709ba5c 00000004 B CTRPluginFramework::Controller::_keysHeld
0709ba60 00000004 B CTRPluginFramework::Controller::_keysDown
0709ba64 00000004 b CTRPluginFramework::g_runningInstance
0709ba68 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0709ba6c 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0709ba70 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0709ba72 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0709ba74 0000001c b CTRPluginFramework::g_dummy
0709ba90 00000180 b CTRPluginFramework::g_keyName
0709bc10 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0709bc2c 00000004 b g_onLoadCroLock
0709bc30 00000004 b g_onSharedMemMapHook
0709bc34 00000004 b g_onLoadCroHook
0709bc38 00000008 b CTRPluginFramework::g_mainThread
0709bc40 00000004 B CTRPluginFramework::g_keepEvent
0709bc44 00000004 B CTRPluginFramework::g_keepThreadHandle
0709bc48 00000004 B CTRPluginFramework::g_continueGameEvent
0709bc50 00000008 B CTRPluginFramework::_sdmcArchive
0709bc58 00001000 b CTRPluginFramework::keepThreadStack
0709cc58 00000004 b g_mainThreadVars
0709cc5c 00000001 b properInit
0709cc5d 00000001 b fakeInit
0709cc60 00000004 b plgLdrRefCount
0709cc64 00000004 b plgReply
0709cc68 00000004 b plgEvent
0709cc6c 00000004 b plgLdrArbiter
0709cc70 00000004 b plgLdrHandle
0709cc74 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0709cc78 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0709cc7c 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0709cc84 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0709cc8c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0709cc90 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0709cc98 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0709cca0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0709cca8 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0709ccac 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0709ccb0 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0709ccb4 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0709ccb8 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0709ccbc 00000004 b CTRPluginFramework::isReady
0709ccc0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0709ccc8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0709ccd0 00000008 B CTRPluginFramework::Screenshot::_task
0709ccd8 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0709cce0 00000008 B CTRPluginFramework::Screenshot::_timer
0709cce8 00000004 B CTRPluginFramework::Screenshot::_display
0709ccec 00000004 B CTRPluginFramework::Screenshot::_filecount
0709ccf0 00000004 B CTRPluginFramework::Screenshot::_mode
0709ccf4 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0709ccf8 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0709ccfc 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0709cd14 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0709cd30 00000008 B CTRPluginFramework::Screenshot::Timer
0709cd38 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0709cd3c 00000008 b CTRPluginFramework::g_sleepEvent
0709cd44 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0709cd48 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0709cd4c 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0709cd50 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0709cd51 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0709cd52 00000001 B _g_isCitra
0709cd54 0000001c B CTRPluginFramework::HookManager::_singleton
0709cd70 000000a8 B CTRPluginFramework::Scheduler::_singleton
0709ce18 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0709ce1c 00000004 B CTRPluginFramework::ScreenImpl::Top
0709ce20 000000ac b CTRPluginFramework::_botBuf
0709cecc 000000ac b CTRPluginFramework::_topBuf
0709cf78 00000008 b CTRPluginFramework::Heap::g_heapPool
0709cf80 0000000c b CTRPluginFramework::Heap::_mutex
0709cf8c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0709cf90 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0709cf94 0000000c b sAddrMap
0709cfa0 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0709cfb8 0000000c B CTRPluginFramework::FSPath::FSMutex
0709cfc4 00000044 b CTRPluginFramework::g_previousException
0709d008 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0709d00c 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0709d014 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0709d020 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0709d02c 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0709d03c 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0709d040 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0709d0a4 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0709d0a8 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0709d0b0 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0709d0b8 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0709d0bc 00000004 B CTRPluginFramework::ProcessImpl::Status
0709d0c0 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0709d0c4 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0709d0c8 00000004 B CTRPluginFramework::EventManager::_firstTouch
0709d0cc 00000001 B CTRPluginFramework::EventManager::_isTouching
0709d0d0 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0709d0d4 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0709d0e0 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0709d0e4 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0709d0f0 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0709d0f4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0709d0f8 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0709d0fc 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0709d100 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0709d108 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0709d10c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0709d110 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0709d118 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0709d120 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0709d128 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0709d12c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0709d134 00000008 b CTRPluginFramework::g_textXpos
0709d13c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0709d140 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0709d148 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0709d14c 00000004 b CTRPluginFramework::g_screenshotEntry
0709d150 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0709d154 00000004 b CTRPluginFramework::g_OpenFileLock
0709d158 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0709d160 00000040 b CTRPluginFramework::g_hookExportFile
0709d1a0 00000004 b CTRPluginFramework::g_HookMode
0709d1a4 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0709d1a8 00000004 b CTRPluginFramework::g_mode
0709d1ac 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0709d1b0 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0709d1c0 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0709d1c4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0709d1d4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0709d1d8 00000004 B CTRPluginFramework::__g_hexEditor
0709d1dc 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0709d1e0 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0709d1f0 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0709d1f4 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0709d1f8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0709d200 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0709d208 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0709d20c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0709d21c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0709d220 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0709d228 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0709d22c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0709d23c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0709d240 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0709d250 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0709d254 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0709d264 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0709d268 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0709d278 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0709d27c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0709d28c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0709d298 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0709d2a4 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0709d2b0 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0709d2b4 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0709d2bc 00000004 b CTRPluginFramework::__pmARinstance
0709d2c0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0709d2c4 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0709d2d4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0709d2d8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0709d2e8 00000004 b CTRPluginFramework::g_radioId
0709d2ec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0709d2f0 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0709d300 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0709d31c 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0709d320 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0709d324 0000000c B CTRPluginFramework::Font::_mutex
0709d330 00000004 B CTRPluginFramework::g_glyphAllocated
0709d334 00000004 B CTRPluginFramework::g_fontAllocated
0709d338 00000028 B CTRPluginFramework::Window::TopWindow
0709d360 00000028 B CTRPluginFramework::Window::BottomWindow
0709d388 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0709d390 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0709d391 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0709d394 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0709d3a0 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0709d3a4 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0709d3a8 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0709d3ac 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0709d3b8 00000050 b CTRPluginFramework::g_fpsCounter
0709d408 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0709d410 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0709d418 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0709d420 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0709d428 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0709d430 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0709d431 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0709d432 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0709d434 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0709d454 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0709d460 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0709d46c 0000000c B CTRPluginFramework::OSDImpl::Notifications
0709d478 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0709d49c 0000000c B CTRPluginFramework::OSDImpl::RecLock
0709d4a8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0709d4c0 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0709d4d8 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0709d4dc 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0709d4e0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0709d4e4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0709d4e8 0000000c B CTRPluginFramework::g_codeTypes
0709d4f4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0709d4f8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0709d504 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0709d508 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0709d514 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0709d515 00000001 b CTRPluginFramework::g_newCondDataToggle
0709d516 00000001 b CTRPluginFramework::g_condAgainstData
0709d518 00000004 b CTRPluginFramework::__arCodeEditor
0709d51c 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0709d51d 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0709d520 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0709d538 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0709d550 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0709d568 000000a8 B CTRPluginFramework::Preferences::Settings
0709d610 00000008 B CTRPluginFramework::Preferences::Backlights
0709d618 00000008 B CTRPluginFramework::Preferences::Flags
0709d620 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0709d624 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0709d628 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0709d62c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0709d644 00000004 B CTRPluginFramework::System::OnAbort
0709d648 00000018 b __threads
0709d660 0000000c b __mutex
0709d66c 00000004 B CTRPluginFramework::_pool
0709d670 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0709d678 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0709d688 00000001 b CTRPluginFramework::g_progressLoop
0709d68c 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0709d690 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0709d698 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0709d6a0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0709d6a8 00000004 b CTRPluginFramework::__converter
0709d6ac 00000004 b CTRPluginFramework::g_context
0709d6b0 00000001 b CTRPluginFramework::ToggleFloat
0709d6b1 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0709d6b4 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0709d6b8 00000004 B CTRPluginFramework::ARHandler::ActiveData
0709d6bc 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0709d6c0 00000008 B CTRPluginFramework::ARHandler::Storage
0709d6c8 00000010 B CTRPluginFramework::ARHandler::Data
0709d6d8 00000008 B CTRPluginFramework::ARHandler::Offset
0709d6e0 00000fa0 b CTRPluginFramework::arStack
0709e680 00000004 b arbiter
0709e684 00000004 b sharedFontAddr
0709e688 00000004 B g_sharedFont
0709e68c 00000004 b srvRefCount
0709e690 00000004 b srvHandle
0709e694 00000004 b currentAddr
0709e698 00000004 b maxAddr
0709e69c 00000004 b minAddr
0709e6a0 00000004 b cfguRefCount
0709e6a4 00000004 b cfguHandle
0709e6a8 00000001 b gspRunEvents
0709e6ac 00000004 b gspEventThread
0709e6b0 00000004 b gspEvent
0709e6b4 00000001 b gspGpuRight
0709e6b8 00000004 b gspSharedMem
0709e6bc 00000004 b gspSharedMemHandle
0709e6c0 00000004 b gspRefCount
0709e6c4 00000004 b gspGpuHandle
0709e6c8 00000004 b acRefCount
0709e6cc 00000004 b acHandle
0709e6d0 00000004 b amRefCount
0709e6d4 00000004 b amHandle
0709e6d8 00000001 b flagValue.0
0709e6d9 00000001 b flagInit.1
0709e6dc 00000004 b serviceName.6
0709e6e0 0000000c b aptFirstHook
0709e6ec 00000004 b aptLockHandle
0709e6f0 00000001 b usingIrrst
0709e6f4 00000004 b hidRefCount
0709e6f8 00000006 b gRate
0709e700 00000006 b aVec
0709e708 00000004 b cPos
0709e70c 00000004 b tPos
0709e710 00000004 b kRepeat
0709e714 00000004 b kUp
0709e718 00000004 b kDown
0709e71c 00000004 b kHeld
0709e720 00000004 b kOld
0709e724 00000004 B hidSharedMem
0709e728 00000014 B hidEvents
0709e73c 00000004 B hidMemHandle
0709e740 00000004 B hidHandle
0709e744 00000004 b srvPmHandle
0709e748 00000080 b fsExemptArchives
0709e7c8 00000004 b fsuRefCount
0709e7cc 00000004 b fsuHandle
0709e7d0 00000004 V __ctru_heap_size
0709e7d4 00000004 B __ctru_linear_heap
0709e7d8 00000004 B __ctru_heap
0709e7dc 00000004 b irrstRefCount
0709e7e0 00000004 b csPos
0709e7e4 00000004 b kHeld
0709e7e8 00000004 B irrstSharedMem
0709e7ec 00000004 B irrstEvent
0709e7f0 00000004 B irrstMemHandle
0709e7f4 00000004 B irrstHandle
0709e7f8 00000004 b (anonymous namespace)::__new_handler
0709e7fc 00000010 b (anonymous namespace)::emergency_pool
0709e80c 0000000c b (anonymous namespace)::eh_globals
0709e818 00000010 V std::string::_Rep::_S_empty_rep_storage
0709e828 0000000c b __sinit_recursive_mutex
0709e834 0000000c b __sfp_recursive_mutex
0709e840 00000028 B __malloc_current_mallinfo
0709e868 00000004 B __malloc_max_total_mem
0709e86c 00000004 B __malloc_max_sbrked_mem
0709e870 00000004 B __malloc_top_pad
0709e874 0000000c b __malloc_recursive_mutex
0709e880 00000004 b __tz_mutex
0709e884 00000004 b prev_tzenv
0709e888 0000000b b __tzname_dst
0709e894 0000000b b __tzname_std
0709e8a0 00000004 B _timezone
0709e8a4 00000004 B _daylight
0709e8a8 0000000c B __atexit_recursive_mutex
0709e8b4 00000004 b initial_env
0709e8b8 0000000c b __env_recursive_mutex
0709e8c4 00000004 b heap_start.0
0709e8c8 00000004 B fake_heap_start
0709e8cc 00000004 B fake_heap_end
0709e8d0 00000004 b __hndl_lock
0709e8d4 B __tls_start
0709e900 B __bss_end__
0709e900 A __end__
0709e900 B __tls_end
